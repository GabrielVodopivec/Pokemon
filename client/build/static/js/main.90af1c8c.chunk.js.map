{"version":3,"sources":["components/Landing.jsx","actionTypes/index.js","actions/index.js","components/Loading.jsx","components/SearchByName.jsx","components/PaginadoButtons.jsx","components/FilterByType.jsx","components/PaginadoArrows.jsx","components/OrderByAttack.jsx","components/OrderAlphabetically.jsx","components/FilterByOrigin.jsx","components/NavBar.jsx","components/PokeMessage.jsx","components/Pokemon.jsx","components/Home.jsx","components/PokeDetail.jsx","components/AfterCreator.jsx","components/PokePre.jsx","components/PokeCreator.jsx","components/Form.jsx","components/AfterEditor.jsx","components/PokeEditor.jsx","components/Editor.jsx","App.js","reportWebVitals.js","reducer/index.js","store/index.js","index.js"],"names":["LandingPage","className","to","GET_ALL_POKEMONS","GET_TYPES","SELECT_PAGE","SEARCH_BY_NAME","ERROR_SEARCH_BY_NAME","SEARCH_BY_ID","ERROR_SEARCH_BY_ID","LOADING","FILTER_BY_TYPE","FILTER_BY_ORIGIN","ORDER_BY_ATTACK","ORDER_ALPHABETICALLY","POKEMON_CREATED","EXISTENT_POKEMON","BACK_TO_CREATOR","RESET_CREATED","EDITING_AGAIN","SET_DETAIL","CLEAN_CACHE","DELETE_POKEMON","BULK_CREATE","CHECK_BULK","UPDATE_POKEMON","RESET_UPDATING","FAIL_UPDATE","getAllPokemons","dispatch","axios","then","resp","console","log","type","payload","data","catch","error","response","getTypes","searchById","id","pokemon","selectPage","number","resetCreator","resetUpdating","Loading","SearchByName","useDispatch","useState","name","setName","onSubmit","event","preventDefault","length","trim","searchByName","toLowerCase","value","placeholder","onChange","target","PaginadoButtons","pokemons","useSelector","state","pokemonsPerPage","actualPage","page","quantityOfButtons","Math","ceil","handleClick","arrButtons","push","buttons","map","onClick","FiterByType","types","useEffect","defaultValue","filterByType","window","document","getElementsByClassName","hidden","PaginadoArrows","parseInt","prev","next","OrderByAttack","orderType","orderByAttack","OrderAlphabetically","orderAlphabetically","FilterByOrigin","origin","NavBar","pokeQuantity","errorSearchByName","needBulk","handleBulk","post","src","alt","disabled","PokeMessage","img","replace","toUpperCase","Pokemon","attack","errorSearchById","index","Home","loading","inDetail","lastPokemon","firstPokemon","pokemonsOnScreen","slice","poke","PokeDetail","useParams","pokeDetail","deleted","alert","setAlert","handleAlert","height","weight","fromdb","delete","deletePokemon","defense","hp","velocidad","AfterCreator","created","PokePre","props","pokeTypes","el","PokeCreator","creating","back","pokeCache","bulked","setPokemon","errorType","setErrorType","i","arr","checked","resetCheckbox","inputValidator","test","filteredTypes","createPokemon","htmlFor","pattern","size","required","min","Object","values","errorMessage","Form","AfterEditor","updated","messageUpdate","PokeEditor","setState","filtered","handleMainPage","handleSubmit","pokeToUpdate","updatePokemon","this","updating","defaultChecked","some","e","Component","connect","put","up","Editor","App","exact","path","element","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","initialState","allPokemons","createdPokemon","createAnother","rootReducer","action","pokemonCreated","wasCreated","toFilter","arreglo","toLocaleLowerCase","toFilterByOrigin","fromDb","filter","fromApi","toOrderByAttack","attackOrder","array","pivot","left","right","ToOrderAlphabetically","alphabeticOrder","bulkDone","pokes","store","createStore","compose","applyMiddleware","thunk","__REDUX_DEVTOOLS_EXTENSION__","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.90af1c8c.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nexport default function LandingPage () {\r\n\r\n    return (\r\n    <div className=\"landingPage\">\r\n        <Link to = '/home'>\r\n        \r\n            <button className=\"conteinerstartBtn\"></button>\r\n        \r\n        </Link>\r\n    </div>\r\n    )\r\n}\r\n\r\n","export const GET_ALL_POKEMONS = \"GET_ALL_POKEMONS\"; \r\nexport const GET_TYPES = \"GET_TYPES\";\r\nexport const LOADED_TYPES = \"LOADED_TYPES\";\r\nexport const SELECT_PAGE = \"SELECT_PAGE\";\r\nexport const SEARCH_BY_NAME = \"SEARCH_BY_NAME\";\r\nexport const ERROR_SEARCH_BY_NAME = \"ERROR_SEARCH_BY_NAME\";\r\nexport const SEARCH_BY_ID = \"SEARCH_BY_ID\";\r\nexport const ERROR_SEARCH_BY_ID = \"ERROR_SEARCH_BY_ID\";  \r\nexport const LOADING = \"LOADING\";\r\n\r\nexport const FILTER_BY_TYPE = \"FILTER_BY_TYPE\";\r\nexport const FILTER_BY_ORIGIN = \"FILTER_BY_ORIGIN\";\r\nexport const ORDER_BY_ATTACK = \"ORDER_BY_ATTACK\";\r\nexport const ORDER_ALPHABETICALLY = \"ORDER_ALPHABETICALLY\";\r\n\r\nexport const POKEMON_CREATED = \"POKEMON_CREATED\"; \r\nexport const EXISTENT_POKEMON = \"EXISTENT_POKEMON\"; \r\nexport const BACK_TO_CREATOR = \"BACK_TO_CREATOR\"; \r\nexport const RESET_CREATED = \"RESET_CREATED\";\r\nexport const EDITING_AGAIN = \"EDITING_AGAIN\";\r\nexport const SET_DETAIL = \"SET_DETAIL\";\r\nexport const CLEAN_CACHE = \"CLEAN_CACHE\";\r\n\r\nexport const DELETE_POKEMON = \"DELETE_POKEMON\";\r\nexport const BULK_CREATE = \"BULK_CREATE\";\r\nexport const CHECK_BULK = \"CHECK_BULK\";\r\n\r\n\r\nexport const UPDATE_POKEMON = \"UPDATE_POKEMON\";\r\nexport const RESET_UPDATING = \"RESET_UPDATING\";\r\nexport const FAIL_UPDATE = \"FAIL_UPDATE\";","import axios from 'axios';\r\nimport { BACK_TO_CREATOR, BULK_CREATE, CHECK_BULK, CLEAN_CACHE, DELETE_POKEMON, EDITING_AGAIN, ERROR_SEARCH_BY_ID, ERROR_SEARCH_BY_NAME, EXISTENT_POKEMON, FAIL_UPDATE, FILTER_BY_ORIGIN, FILTER_BY_TYPE, GET_ALL_POKEMONS, GET_TYPES, LOADING, ORDER_ALPHABETICALLY, ORDER_BY_ATTACK, POKEMON_CREATED, RESET_CREATED, RESET_UPDATING, SEARCH_BY_ID, SEARCH_BY_NAME, SELECT_PAGE, SET_DETAIL, UPDATE_POKEMON } from '../actionTypes';\r\n\r\nexport const getAllPokemons = () => {\r\n    return dispatch => {\r\n        axios(`http://localhost:3001/pokemons`)\r\n            .then(( resp ) => {\r\n                console.log('getAllPokemons')\r\n                return dispatch({\r\n                type: GET_ALL_POKEMONS,\r\n                payload: resp.data\r\n                })\r\n            })\r\n            .catch(( error ) => {\r\n                console.log( error.response.data )\r\n            })\r\n    }\r\n};\r\nexport const getTypes = () => {\r\n    return dispatch => {\r\n        console.log('getTypes')\r\n        axios(`http://localhost:3001/types`)\r\n        .then(( response ) => {\r\n            return dispatch({\r\n            type: GET_TYPES,\r\n            payload: response.data\r\n        })})\r\n        .catch(( error ) => {\r\n            console.log( error )\r\n        })\r\n    }\r\n}\r\nexport const searchByName = ( name ) => {\r\n    return ( dispatch ) => {\r\n        dispatch({\r\n            type: LOADING\r\n        })\r\n        axios(`http://localhost:3001/pokemons?name=${name.trim()}`)\r\n        .then(( response ) => {\r\n            return dispatch({\r\n                type: SEARCH_BY_NAME,\r\n                payload: response.data\r\n            })\r\n        })\r\n        .catch(( error ) => {\r\n            return dispatch ({\r\n                type: ERROR_SEARCH_BY_NAME,\r\n                payload: error.response.data\r\n            })\r\n        })\r\n    }\r\n};\r\nexport const searchById = ( id ) => {\r\n    return ( dispatch ) => {\r\n        dispatch({\r\n            type: LOADING\r\n        })\r\n        axios(`http://localhost:3001/detail/${id}`)\r\n        .then(( pokemon ) => {\r\n            dispatch({\r\n                type: SEARCH_BY_ID,\r\n                payload: pokemon.data\r\n            })\r\n        })\r\n        .catch(( error ) => {\r\n            console.log(error.response)\r\n            dispatch({\r\n                type: ERROR_SEARCH_BY_ID,\r\n                payload: ('invalid ID')\r\n            })\r\n        })\r\n    }\r\n}\r\nexport const filterByType = ( type ) => {\r\n    return {\r\n        type: FILTER_BY_TYPE,\r\n        payload: type\r\n    }\r\n}\r\nexport const filterByOrigin = ( origin ) => {\r\n    return {\r\n        type: FILTER_BY_ORIGIN,\r\n        payload: origin\r\n    }\r\n}\r\nexport const orderByAttack = ( orderType ) => {\r\n    return {\r\n        type: ORDER_BY_ATTACK,\r\n        payload: orderType\r\n    }\r\n}\r\nexport const orderAlphabetically = ( orderType ) => {\r\n    return {\r\n        type: ORDER_ALPHABETICALLY,\r\n        payload: orderType\r\n    }\r\n}\r\nexport const createPokemon = ({\r\n    name,\r\n    img,\r\n    hp,\r\n    attack,\r\n    defense,\r\n    velocidad,\r\n    height,\r\n    weight,\r\n    pokeTypes,\r\n    bulked\r\n}) => {\r\n    return ( dispatch ) => {\r\n        dispatch({\r\n            type: LOADING,\r\n        })\r\n        \r\n        axios(`http://localhost:3001/pokemons?name=${name.trim()}`)\r\n        .then(() => {\r\n            dispatch({\r\n                type: \"FILL_CACHE\",\r\n                payload: {\r\n                name,\r\n                img,\r\n                hp,\r\n                attack,\r\n                defense,\r\n                velocidad,\r\n                height,\r\n                weight,\r\n                pokeTypes,\r\n                bulked\r\n                }\r\n            })\r\n            dispatch({\r\n                type: EXISTENT_POKEMON\r\n            })\r\n            \r\n        })\r\n        .catch(() => {\r\n            axios.post(`http://localhost:3001/pokemons`, {\r\n                name,\r\n                img,\r\n                hp,\r\n                attack,\r\n                defense,\r\n                velocidad,\r\n                height,\r\n                weight,\r\n                pokeTypes,\r\n                bulked\r\n            })\r\n            .then(( response ) => {\r\n                console.log('se hizo el post')\r\n                console.log(response.data)\r\n                return dispatch({\r\n                    type: POKEMON_CREATED,\r\n                    payload: response.data\r\n                })\r\n            })\r\n            .catch(( error ) => {\r\n                console.log( error )\r\n            })\r\n        })\r\n        \r\n    }\r\n}\r\nexport const backToCreator = () => {\r\n    return {\r\n        type: BACK_TO_CREATOR\r\n    }\r\n}\r\nexport const editingAgain = () => {\r\n    return {\r\n        type: EDITING_AGAIN\r\n    }\r\n}\r\nexport const selectPage = ( number ) => {\r\n    return {\r\n        type: SELECT_PAGE,\r\n        payload: number\r\n    }\r\n}\r\nexport const resetCreator = () => {\r\n    return {\r\n        type: RESET_CREATED\r\n    }\r\n}\r\nexport const cleanCache = () => {\r\n    return {\r\n        type: CLEAN_CACHE\r\n    }\r\n}\r\nexport const setDetail = () => {\r\n    return {\r\n        type: SET_DETAIL\r\n    }\r\n}\r\nexport const deletePokemon = ( id ) => {\r\n    return ( dispatch ) => {\r\n        axios.delete(`http://localhost:3001/pokemons/${id}`)\r\n        .then(( response ) => dispatch({\r\n            type: DELETE_POKEMON,\r\n            payload: response.data\r\n        }))\r\n        .catch(( error ) => {\r\n            console.log( error )\r\n        });\r\n    }\r\n}\r\nexport const bulkCreate = () => {\r\n    return ( dispatch ) => {\r\n\r\n        axios.post(`http://localhost:3001/pokeomons/bulkCreate`)\r\n        \r\n        .then( () => {\r\n            console.log(\"Bulk Done\")\r\n            return dispatch({\r\n                type: BULK_CREATE\r\n            })\r\n        })\r\n        .catch(() => {\r\n            console.log(\"hubo problemas con el bulk\")\r\n        })\r\n    }\r\n}\r\nexport const checkBulk = () => {\r\n    return {\r\n        type: CHECK_BULK\r\n    }\r\n}\r\n\r\nexport const updatePokemon = ({\r\n    id,\r\n    name,\r\n    img,\r\n    hp,\r\n    attack,\r\n    defense,\r\n    velocidad,\r\n    height,\r\n    weight,\r\n    pokeTypes,\r\n    bulked\r\n}) => {\r\n    return (dispatch) => {\r\n        dispatch({\r\n            type: LOADING\r\n        })\r\n        axios.put(`http://localhost:3001/pokemons/update/${id}`, {\r\n            name,\r\n            img,\r\n            hp,\r\n            attack,\r\n            defense,\r\n            velocidad,\r\n            height,\r\n            weight,\r\n            pokeTypes,\r\n            bulked\r\n        })\r\n        .then(( response ) => {\r\n            console.log(response.data.up)\r\n            return dispatch({\r\n                type: UPDATE_POKEMON,\r\n                payload: response.data\r\n            })\r\n        })\r\n        .catch(( error ) => {\r\n            console.log('llega hasta aca?')\r\n            console.log ( error.response.data )\r\n            dispatch({\r\n                type: FAIL_UPDATE,\r\n                payload: error.response.data\r\n            })\r\n        })\r\n    }\r\n}\r\n\r\nexport const resetUpdating = () => {\r\n    return {\r\n        type: RESET_UPDATING\r\n    }\r\n}","import React from \"react\";\r\n\r\nconst Loading = () => {\r\n    return (\r\n        <div className=\"loadingPage\">\r\n            <button className=\"conteinerstartBtn\"></button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Loading;","import React from \"react\";\r\nimport { useState } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\n\r\nimport { searchByName } from \"../actions\";\r\n\r\nexport default function SearchByName () {\r\n    const dispatch = useDispatch();\r\n    const [ name, setName ] = useState( \"\" )\r\n\r\n    const handleSubmit = ( event ) => {\r\n        event.preventDefault();\r\n        name.length && dispatch( searchByName( name.toLowerCase() ) ); \r\n        setName( '' );   \r\n    }\r\n    \r\n    const handleChange = ( event ) => {\r\n        event.preventDefault();\r\n        setName( event.target.value )\r\n    }\r\n    return (\r\n        <form \r\n        onSubmit={ handleSubmit }\r\n        >\r\n            <input \r\n            className=\"inputSearchByNameNav\"\r\n            type=\"text\"\r\n            value={ name }\r\n            placeholder=\"Search by name\"\r\n            onChange={ handleChange }  \r\n            />\r\n            <input \r\n            className=\"buttonSearchByNameNav\"\r\n            type=\"submit\"\r\n            value={\"Search\"}\r\n            />\r\n        </form>\r\n    )\r\n}","import React from \"react\";\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n\r\nimport { selectPage } from \"../actions\";\r\n\r\nconst PaginadoButtons = () => {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const pokemons = useSelector( state => state.pokemons );\r\n    const pokemonsPerPage = useSelector( state => state.pokemonsPerPage );\r\n    const actualPage = useSelector( state => state.page )\r\n\r\n    const quantityOfButtons = Math.ceil( pokemons.length/pokemonsPerPage)\r\n\r\n    const buttons = ( quantityOfButtons ) => {\r\n        let arrButtons = [];\r\n        let page = 1;\r\n        while ( page <= quantityOfButtons ) {\r\n            arrButtons.push( page );\r\n            page++\r\n        };\r\n        return arrButtons;\r\n    }\r\n\r\n    const handleClick = ( event ) => {\r\n        event.preventDefault();\r\n        const page = event.target.value;\r\n        dispatch( selectPage( page ));\r\n    }\r\n\r\n    return (\r\n        <div className=\"paginadoArrowsBtnNav\">\r\n            {\r\n                buttons( quantityOfButtons ).map(( page ) => {\r\n                    return (\r\n                        <button\r\n                        key={ page }\r\n                        value={ page }\r\n                        className={(actualPage === page)? \"btnPageFocus\" : \"btnPage\"}\r\n                        \r\n                        onClick={ handleClick }\r\n                        > { page } </button>\r\n                    )\r\n                })\r\n            }\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default PaginadoButtons;","import React from \"react\";\r\nimport { useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n\r\nimport { filterByType, getTypes } from \"../actions\";\r\n\r\nexport default function FiterByType () {\r\n\r\n    const dispatch = useDispatch();\r\n    const types = useSelector( state => state.types );\r\n\r\n    useEffect(() => {\r\n        !types.length && dispatch( getTypes() )\r\n    }, [ dispatch, types ])\r\n\r\n    const handleSelect = ( event ) => {\r\n        const type = event.target.value;\r\n        console.log(type)\r\n        dispatch( filterByType( type ) )\r\n        window.document.getElementsByClassName(\"selectType\")[0].value = \"Types\";\r\n    }\r\n\r\n\r\n    return (\r\n        <div className=\"conteinerSelectTypeNav\">\r\n            \r\n            <select className=\"selectType\" defaultValue=\"Types\" onChange = { handleSelect } >\r\n                <option value=\"Types\" hidden >Types</option>\r\n                <option value=\"All\">All types</option>\r\n                {\r\n                    types.map(( type ) => {\r\n                        return (\r\n                            <option\r\n                            key={ type.id } \r\n                            value = { type.name } \r\n                            > { type.name } </option>\r\n                        )\r\n                    })\r\n                }\r\n            </select>\r\n        </div>\r\n    )\r\n}","import React from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n\r\nimport { selectPage } from \"../actions\";\r\n\r\nexport default function PaginadoArrows () {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const pokemons = useSelector( state => state.pokemons );\r\n    const pokemonsPerPage = useSelector( state => state.pokemonsPerPage );\r\n    const page = useSelector( state => state.page );\r\n\r\n    const quantityOfButtons = Math.ceil( pokemons.length/pokemonsPerPage);\r\n\r\n    const handlePrev = () => {\r\n        let prev = parseInt( page ) - 1;\r\n        dispatch( selectPage( prev ) );\r\n    };\r\n\r\n    const handleNext = () => {\r\n        let next = parseInt( page ) + 1;\r\n        dispatch( selectPage( next ));\r\n    }\r\n    return (\r\n        <div className=\"paginadoArrows\" >\r\n            <div className=\"paginadoArrowsBtnNav\">\r\n                {\r\n                    (parseInt( page ) !== 1) ?\r\n                    <div>\r\n                        <button\r\n                        className=\"btnPageArrow\"\r\n                        onClick={ handlePrev }\r\n                        > ◀ </button>\r\n                    </div> : null\r\n                }\r\n            </div>\r\n            <div className=\"paginadoArrowsBtnNav\">\r\n                <div> {`${page} / ${quantityOfButtons}`} </div>\r\n            </div>\r\n            <div className=\"paginadoArrowsBtnNav\">\r\n                {\r\n                    parseInt( page ) !== quantityOfButtons ?\r\n                    <div>\r\n                        <button\r\n                        className=\"btnPageArrow\"\r\n                        onClick={ handleNext }\r\n                        >▶</button>\r\n                    </div> : null\r\n                }\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React from \"react\";\r\nimport { useDispatch } from \"react-redux\"\r\n\r\nimport { orderByAttack } from \"../actions\";\r\n\r\nexport default function OrderByAttack () {\r\n\r\n    const dispatch = useDispatch()\r\n    \r\n\r\n    const handleAttackOrder = ( event ) => {\r\n        event.preventDefault();\r\n        const orderType = event.target.value;\r\n        console.log(orderType)\r\n        dispatch( orderByAttack( orderType ) )\r\n        window.document.getElementsByClassName(\"selectOrderNav\")[0].value = \"Attack Order\";\r\n    }\r\n\r\n    return (\r\n        <div className=\"conteinerInputOrderNav\">\r\n            <select className=\"selectOrderNav\" defaultValue={\"Attack Order\"} onChange={ handleAttackOrder }>\r\n                <option value=\"Attack Order\" hidden> Attack Order </option>\r\n                <option value=\"ASC\"> Lowest first </option>\r\n                <option value=\"DSC\"> Highest first </option>\r\n            </select>\r\n        </div>\r\n    )\r\n}\r\n\r\n","import React from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n\r\nimport { orderAlphabetically } from \"../actions\";\r\n\r\nexport default function OrderAlphabetically () {\r\n    const dispatch = useDispatch();\r\n    const pokemons = useSelector( state => state.pokemons );\r\n\r\n    const handleOrder = ( event ) => {\r\n        event.preventDefault();\r\n        const orderType = event.target.value;\r\n        pokemons.length && dispatch( orderAlphabetically( orderType ))\r\n        window.document.getElementsByClassName(\"selectOrderAlphNav\")[0].value = \"Alphabetic Order\";\r\n    }\r\n    return (\r\n        <div className=\"conteinerInputOrderNav\">\r\n            <select className=\"selectOrderAlphNav\" defaultValue={\"Alphabetic Order\"} onChange={ handleOrder }>\r\n                <option value={\"Alphabetic Order\"} hidden>Alphabetic Order</option>\r\n                <option value=\"ASC\">A-Z</option>\r\n                <option value=\"DSC\">Z-A</option>\r\n            </select>\r\n        </div>\r\n    )\r\n}","import React from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { filterByOrigin } from \"../actions\";\r\n\r\nconst FilterByOrigin = () => {\r\n    const dispatch = useDispatch();\r\n    const handleChange = ( event ) =>{\r\n        event.preventDefault();\r\n        dispatch( filterByOrigin( event.target.value ) );\r\n        window.document.getElementsByClassName(\"selectOrigin\")[0].value = \"Origin\";\r\n    }\r\n    return (\r\n        <div className=\"conteinerFilterByOriginNav\">\r\n            <select className=\"selectOrigin\" defaultValue={\"Origin\"} onChange={ handleChange }>\r\n                <option value=\"Origin\" hidden> Origin </option>\r\n                <option value=\"db\"> Data Base </option>\r\n                <option value=\"api\"> Api </option>\r\n            </select>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default FilterByOrigin;","import React from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport SearchByName from \"./SearchByName\";\r\nimport PaginadoButtons from \"./PaginadoButtons\";\r\nimport FilterByType from \"./FilterByType\"\r\nimport PaginadoArrows from \"./PaginadoArrows\";\r\nimport OrderByAttack from \"./OrderByAttack\";\r\nimport OrderAlphabetically from \"./OrderAlphabetically\";\r\nimport FilterByOrigin from \"./FilterByOrigin\";\r\n\r\nimport { bulkCreate, getAllPokemons, resetCreator } from \"../actions\";\r\n\r\nexport default function NavBar () {\r\n\r\n    const dispatch = useDispatch();\r\n    const pokeQuantity = useSelector( state => state.pokemons );\r\n    const errorSearchByName = useSelector( state => state.errorSearchByName );\r\n    const needBulk = useSelector( state => state.needBulk );\r\n\r\n    const handleBtnCreate = () => {\r\n        dispatch( resetCreator() );\r\n    };\r\n\r\n    const handleClick = ( event ) => {\r\n        event.preventDefault();\r\n        dispatch( getAllPokemons() );\r\n    };\r\n\r\n    const handleBulk = () => {\r\n        dispatch( bulkCreate() );\r\n    };\r\n\r\n    return (\r\n        <div className=\"interiorNavbar\">\r\n            <div className=\"principalTitle\">\r\n                 <img className=\"titile\" src=\"http://24.media.tumblr.com/232a91726b505a0e8ef44648ca7cc854/tumblr_mjflojSWnr1s1byhpo1_500.gif\" alt=\"Img not found\" />\r\n            </div>\r\n            <div className=\"quantity\">\r\n                { \r\n                    !errorSearchByName.length ? \r\n                    pokeQuantity.length > 1 ?\r\n                    <div>We found {pokeQuantity.length} pokemons </div> :\r\n                    <div>We found {pokeQuantity.length} pokemon </div> :\r\n                    null\r\n                }\r\n            </div>\r\n            <div className=\"conteinerSearchByNameNav\">\r\n                <SearchByName />\r\n            </div>\r\n\r\n            <div className=\"conteinerPaginadoNav\">\r\n                <PaginadoButtons />\r\n                <PaginadoArrows />\r\n            </div>\r\n            <div className=\"conteinerFiltersNav\">\r\n                <FilterByType />\r\n                <FilterByOrigin />\r\n            </div>\r\n        \r\n            <div className=\"conteinerOrderNav\">\r\n                <OrderByAttack />\r\n                <OrderAlphabetically />\r\n            </div>\r\n            <div className=\"createPokemonNav\">\r\n                <h2>Create your own Pokemon!</h2>\r\n            <div>\r\n                <Link to = '/pokecreator'>\r\n                    <button\r\n                    className=\"BtnCreatePokemonsNav\"\r\n                    onClick={ handleBtnCreate }\r\n                    >\r\n                        Create!\r\n                    </button>\r\n                </Link>\r\n            </div>\r\n            <div className=\"bulkbtnNav\">\r\n                {\r\n                    needBulk ? \r\n                    <button\r\n                    className=\"BtnCreatePokemonsNav\"\r\n                    onClick={ handleBulk }\r\n                    >\r\n                        BulkCreator\r\n                    </button> : \r\n                    <button\r\n                    disabled\r\n                    className=\"BtnCreatePokemonsNav\"\r\n                    onClick={ handleBulk }\r\n                    >\r\n                        BulkCreator\r\n                    </button>\r\n                }\r\n            </div>\r\n            <div className=\"conteinerBtnAllPokemonsNav\">\r\n                <button\r\n                className=\"BtnAllPokemonsNav\"\r\n                onClick={ handleClick }\r\n                >\r\n                    Show All Pokemons\r\n                </button>\r\n            </div>\r\n            </div>\r\n        </div>\r\n    )\r\n};","import React from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { getAllPokemons } from \"../actions\";\r\nexport default function PokeMessage ({ name, img }) {\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const handleClick = () => {\r\n        dispatch( getAllPokemons() )\r\n    }\r\n\r\n    return (\r\n        <div className=\"PokecardError\">\r\n            {name.length && <h2 className=\"titlePokemonError\" > {`${name.replace(name[0], name[0].toUpperCase())}`} </h2>}\r\n            <img \r\n            className=\"imgpokeError\" \r\n            src={img} \r\n            alt=\"img not found\" />\r\n            <div className=\"imgCardError\" >\r\n                <Link to = '/home'>\r\n                    <button \r\n                    className=\"btnpokeError\"\r\n                    onClick={ handleClick }\r\n                    > Back to Main Page\r\n                    </button>\r\n                </Link>\r\n            </div>\r\n            \r\n        </div>\r\n    )\r\n}","import React from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport { setDetail, getAllPokemons } from \"../actions\";\r\n\r\nexport default function Pokemon ( { id, name, img, types, attack } ) {\r\n\r\n    const dispatch = useDispatch()\r\n    const errorSearchByName = useSelector( state => state.errorSearchByName )\r\n    const errorSearchById = useSelector( state => state.errorSearchById )\r\n    const handleDetail = () => {\r\n        dispatch( setDetail() )\r\n    }\r\n    const handleClick = () => {\r\n        dispatch( getAllPokemons() )\r\n    }\r\n\r\n    return (\r\n        <div className=\"Pokecard\">\r\n            \r\n            <div className=\"imgCard\" >\r\n            {\r\n                !errorSearchByName.length && !errorSearchById.length ?\r\n                <Link onClick={ handleDetail } to = {`/detail/${id}`}>\r\n                    <img className=\"imgpoke\" src={img} alt=\"img not found\" />\r\n                </Link> :\r\n                <Link to = '/home'>\r\n                <button \r\n                className=\"imgpokeError\"\r\n                onClick={ handleClick }\r\n                >   \r\n                    <img className=\"imgpoke\" src={img} alt=\"img not found\" />\r\n                </button>\r\n                </Link>\r\n            }\r\n            </div>\r\n            {name.length && <h2 className=\"titlePokemon\" > {`${name.replace(name[0], name[0].toUpperCase())}`} </h2>}\r\n            <h3> {attack?`Attack: ${ attack }`: null} </h3>\r\n            <div className=\"pokeTypes\" >\r\n                {\r\n                    types.length ? types.map(( type, index ) => {\r\n                        return (\r\n                            <div\r\n                            className=\"typesNamePokemon\"\r\n                            key={ index }\r\n                            > { type.name } </div>\r\n                        )\r\n                    }): null\r\n                }\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React, { useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { checkBulk, getAllPokemons } from \"../actions\";\r\nimport Loading from \"./Loading\";\r\nimport NavBar from \"./NavBar\";\r\nimport PokeMessage from \"./PokeMessage\";\r\n\r\nimport Pokemon from \"./Pokemon\";\r\n\r\nexport default function Home () {\r\n    const dispatch = useDispatch();\r\n\r\n    const page = useSelector( state => state.page );\r\n    const loading = useSelector( state => state.loading );\r\n    const pokemons = useSelector(state => state.pokemons);\r\n    const inDetail = useSelector( state => state.inDetail )\r\n    const pokemonsPerPage = useSelector( state => state.pokemonsPerPage );\r\n    const errorSearchByName = useSelector( state => state.errorSearchByName );\r\n\r\n    const lastPokemon = page * pokemonsPerPage;\r\n    const firstPokemon = lastPokemon - pokemonsPerPage;\r\n    const pokemonsOnScreen = pokemons.slice( firstPokemon, lastPokemon );\r\n\r\n    \r\n\r\n    useEffect(() => {\r\n      !inDetail &&  dispatch( getAllPokemons() );\r\n      dispatch( checkBulk() )\r\n    }, [ dispatch, inDetail ])\r\n\r\n    return (\r\n        <div className=\"home\">\r\n            <div className=\"navbarConteiner\" >\r\n                <div className=\"NavBar\" >\r\n                <NavBar />\r\n                </div>\r\n            </div>\r\n            {\r\n                !loading ? \r\n                <div className=\"contenedor\">\r\n                {\r\n                    ( pokemons.length && !errorSearchByName.length ) ? \r\n                    pokemonsOnScreen.map(( poke ) => {\r\n                        return(\r\n                        <div className=\"conteinerPokecard\" key={poke.id}>  \r\n                            <Pokemon \r\n                            id={poke.id}\r\n                            img={poke.img}\r\n                            name={poke.name}\r\n                            attack={poke.attack}\r\n                            types={poke.types}\r\n                            />   \r\n                        </div>\r\n                        ) \r\n                    })  : \r\n                    <div>\r\n                    <PokeMessage\r\n                    name={ errorSearchByName }\r\n                    img={\"https://i1.wp.com/www.sopitas.com/wp-content/uploads/2017/07/pikachu.gif\"}\r\n                    />  \r\n                    </div> \r\n                } \r\n            </div> : <Loading />\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n","import React from \"react\";\r\nimport { useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Link, useParams } from \"react-router-dom\";\r\n\r\nimport Loading from \"./Loading\";\r\nimport Pokemon from \"./Pokemon\";\r\n\r\nimport { deletePokemon, searchById } from \"../actions\";\r\nimport { useState } from \"react\";\r\nimport PokeMessage from \"./PokeMessage\";\r\n\r\nconst PokeDetail = () =>{\r\n\r\n    const { id } = useParams();\r\n    const dispatch = useDispatch();\r\n\r\n    const pokeDetail = useSelector( state => state.pokeDetail);\r\n    const loading = useSelector( state => state.loading );\r\n    const errorSearchById = useSelector( state => state.errorSearchById );\r\n    const deleted = useSelector( state => state.deleted )\r\n    \r\n    useEffect(() => {\r\n        dispatch( searchById( id ) )\r\n    },[ dispatch, id])\r\n    \r\n    const [ alert, setAlert ] = useState( true );\r\n\r\n    const handleAlert = () => {\r\n        alert ?\r\n        setAlert( false ) :\r\n        setAlert( true )\r\n    }\r\n\r\n    const handleDelete = () => {\r\n        setAlert( true );\r\n        dispatch( deletePokemon( id ) )\r\n    }\r\n\r\n    const handleEdit = () => {\r\n        \r\n    }\r\n\r\n    return (\r\n        <>\r\n        {\r\n            !deleted ?\r\n        <>\r\n        \r\n        {   !errorSearchById.length ?\r\n            ( pokeDetail.name && !loading ) ?\r\n            <div className=\"conteinerDetail\">\r\n                <div className=\"subConteiner1\">\r\n                    <div className=\"conteinerInternoDetail\">\r\n                    { \r\n                        <div className=\"conteinerNameDetail\">\r\n                            {\r\n                                pokeDetail.name.length && \r\n                                <h1 className=\"nameDetail\"> \r\n                                    {\r\n                                    `${pokeDetail.name.replace(pokeDetail.name[0], pokeDetail.name[0].toUpperCase())}`\r\n                                    } \r\n                                </h1>\r\n                            }\r\n                            <div>\r\n                            <h2>Physical Stats</h2>\r\n                                <h3> {`Height: ${pokeDetail.height}`} </h3>\r\n                                <h3> {`weight: ${pokeDetail.weight}`} </h3>\r\n                            </div>\r\n                            <h4> {`ID: ${pokeDetail.id}`} </h4>\r\n                            <div className=\"conteinerbtnsDetail\">\r\n                                <div className=\"conteinerbtnsdeletedetail\">\r\n                                    {\r\n                                        pokeDetail.fromdb ?\r\n                                        <>\r\n                                            <div className=\"conteinerBtnEditDetail\">\r\n                                                <Link to = {`/editor/${id}`} >\r\n                                                    <button\r\n                                                    onClick={ handleEdit }\r\n                                                    className=\"EditBtnDetail\"\r\n                                                    >Edit</button>\r\n                                                </Link>\r\n                                            </div>\r\n                                            <div className=\"conteinerBtnsDeleteDetail\">\r\n                                                <div className=\"btnsDeleteDetail\">\r\n                                                    { \r\n                                                        alert ?\r\n                                                        <button\r\n                                                        className=\"deletebtnDetail\"\r\n                                                        onClick={ handleAlert }\r\n                                                        >Delete\r\n                                                        </button> :\r\n                                                        <div>\r\n                                                            <h3>Are you sure? this action is permanent...</h3>\r\n                                                            <button\r\n                                                            className=\"btnAreYouSureDetailYes\"\r\n                                                            onClick={ handleDelete }\r\n                                                            >YES\r\n                                                            </button>\r\n                                                            <button\r\n                                                            className=\"btnAreYouSureDetailNo\"                                                    \r\n                                                            onClick={ handleAlert }\r\n                                                            >NO\r\n                                                            </button>\r\n                                                        </div>\r\n                                                    }\r\n                                                </div>\r\n                                            </div>\r\n                                        </> : null\r\n                                    }\r\n                                </div>\r\n                                <div >\r\n                                    <Link to = '/home'>\r\n                                        <button className=\"BtnCreatePokemonsNav\">Go Back!</button>\r\n                                    </Link>\r\n                                </div>\r\n                            </div>\r\n                        </div> \r\n                    }\r\n                    </div>\r\n                </div>\r\n                <div className=\"subConteiner3\">\r\n                    <div>\r\n                        <img className=\"imgDetail\" src={ pokeDetail.img } alt=\"Img not found\" />\r\n                    </div>\r\n                </div>\r\n                <div className=\"subConteiner2\">\r\n                    \r\n                    <div className=\"conteinerBattleStatsDetail\">\r\n                        <div>\r\n                            <h2>Battle Stats</h2>\r\n                        </div>\r\n                        <div>\r\n                            <h3> {`⚔️ ${pokeDetail.attack}`} </h3>\r\n                            <h3> {`🛡️ ${pokeDetail.defense}`} </h3>\r\n                            <h3> {`🧡 ${pokeDetail.hp}`} </h3>\r\n                            <h3> {`🏃 ${pokeDetail.velocidad}`} </h3>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"conteinerTypesDetail\">\r\n                        <div>\r\n                            <h2>Types</h2>\r\n                        </div>\r\n                        <div className=\"TypesDetail\">\r\n                            {\r\n                                pokeDetail.types.map(( type, index ) => {\r\n                                    return (\r\n                                        <h3 key={ index }> {type.name} </h3>\r\n                                        )\r\n                                    })\r\n                            }\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div> :\r\n            <Loading /> :\r\n            <div>\r\n                    <Pokemon \r\n                    img={\"https://i.pinimg.com/474x/59/8c/5d/598c5da8a0cf4d50a8e55bf93307b251--fanart-pokemon-moment.jpg\"}\r\n                    name={ errorSearchById } \r\n                    types={[\"\"]} \r\n                    />  \r\n            </div>\r\n        }\r\n        </> : \r\n        <PokeMessage \r\n        name = { \"Your pokemon was deleted\"}\r\n        /* img={\"https://i.pinimg.com/originals/00/34/87/003487f3761dfa309aa7f2719c5e1eb0.gif\"} */\r\n        img={\"https://c.tenor.com/Kx9EVA2bKJ4AAAAC/pokemon-pikachu.gif\"}\r\n        />\r\n        }  \r\n        </>\r\n    )\r\n};\r\n\r\nexport default PokeDetail;","import React from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport { backToCreator, getAllPokemons, resetCreator } from \"../actions\";\r\n\r\nconst AfterCreator = () => {\r\n    const dispatch = useDispatch();\r\n    const created = useSelector( state => state.created );\r\n\r\n    const handleMainPage = () => {\r\n        dispatch( getAllPokemons() );\r\n    };\r\n\r\n    const handleClick = ( event ) => {\r\n        \r\n        dispatch( resetCreator() );\r\n    };\r\n\r\n    const handleBack = () => {\r\n        dispatch( backToCreator() );\r\n    };\r\n\r\n    return(\r\n        <div className=\"afterCreator\">\r\n            <div className=\"conteinerAfter\">\r\n                <div className=\"messageAfter\">\r\n                {\r\n                    created ? \r\n                    <h1>Su Pokemon fue creado con éxito!</h1> :\r\n                    <h1>Ese nombre Ya existe, el Pokemon no fue creado</h1>\r\n                }\r\n                </div>\r\n                <div className=\"conteinerBtnsAfter\">\r\n                    <Link className=\"LinkbtnAfter\" to = \"/home\">\r\n                        <button\r\n                        onClick={ handleMainPage }\r\n                        className=\"btnAfter\"\r\n                        >\r\n                            Main Page\r\n                        </button>\r\n                    </Link>\r\n                    {\r\n                        created ? \r\n                    <button\r\n                    className=\"btnAfter\"\r\n                    onClick={ handleClick }\r\n                    >\r\n                        Crear otro Pokemon\r\n                    </button> :\r\n                        <button\r\n                        className=\"btnAfter\"\r\n                        onClick={ handleBack }\r\n                        >\r\n                            Volver a editar\r\n                        </button> \r\n                    }\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default AfterCreator;","import React from \"react\";\r\n/* import { useEffect } from \"react\"; */\r\n\r\nconst PokePre = ( props ) => {\r\n    /* useEffect(()=>{\r\n        console.log(props)\r\n    }) */\r\n    return (\r\n        <div className=\"conteinerPrev\">\r\n            <div className=\"conteinerNamePrev\">\r\n                <h2>{ props.poke.name }</h2>\r\n            </div>\r\n            <h3>Physical Stats</h3>\r\n            <div className=\"conteinerAltPesPrev\">\r\n                <div className=\"weightPrev\" >\r\n                    <div className=\"physicalTitlePrev\">Height</div>\r\n                    <div className=\"physicalValuePrev\"> { props.poke.height } </div>\r\n                </div>\r\n                <div className=\"weightPrev\" >\r\n                    <div className=\"physicalTitlePrev\">Weight</div>\r\n                    <div className=\"physicalValuePrev\"> { props.poke.weight } </div>\r\n                </div>\r\n            </div>\r\n                <h3>{`Battle Stats & Types`}</h3>\r\n            <div className=\"conteinerStatsTypesPrev\">\r\n                <div className=\"conteinerStatsPrev\">\r\n                    <div className=\"statsPrev\">\r\n                        <div className=\"battleTitlePrev\">Attack</div>\r\n                        <div className=\"battleValuePrev\"> {props.poke.attack} </div>\r\n                    </div>\r\n                    <div className=\"statsPrev\">\r\n                        <div className=\"battleTitlePrev\">Defense</div>\r\n                        <div className=\"battleValuePrev\"> {props.poke.defense} </div>\r\n                    </div>\r\n                    <div className=\"statsPrev\">\r\n                        <div className=\"battleTitlePrev\">Hp</div>\r\n                        <div className=\"battleValuePrev\"> {props.poke.hp} </div>\r\n                    </div>\r\n                    <div className=\"statsPrev\">\r\n                        <div className=\"battleTitlePrev\">Speed</div>\r\n                        <div className=\"battleValuePrev\"> {props.poke.velocidad} </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"conteinerTypesPrev\">\r\n                    {props.poke.pokeTypes?.map( (el, index) => {\r\n                        return (\r\n                            <div\r\n                            key={ index } \r\n                            className= \"typesPrev\"\r\n                            > { el } </div>\r\n                        )\r\n                    })}\r\n                </div>\r\n            </div>\r\n            <div className=\"conteinerImgPrev\">    \r\n                <img className=\"ImgPrev\" src={ props.poke.img || \"pikachu-clipart-png-removebg-preview.png\" }  alt=\"Not found\" />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default PokePre;","import React, { useState } from \"react\";\r\nimport { useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n\r\nimport AfterCreator from \"./AfterCreator\";\r\nimport PokePre from \"./PokePre\";\r\nimport Loading from \"./Loading\"\r\n\r\nimport { createPokemon, editingAgain, getAllPokemons } from \"../actions\";\r\n\r\nexport default function PokeCreator () {\r\n\r\n    const dispatch = useDispatch();\r\n    const types = useSelector( state => state.types);\r\n    const creating = useSelector( state => state.creating );\r\n    const loading = useSelector( state => state.loading );\r\n    const back = useSelector( state => state.back );\r\n    const pokeCache = useSelector( state => state.pokeCache );\r\n    const created = useSelector( state => state.created );\r\n\r\n    const [ pokemon, setPokemon ] = useState({\r\n        name: \"\",\r\n        img: \"\",\r\n        hp: 0,\r\n        attack: 0,\r\n        defense: 0,\r\n        velocidad: 0,\r\n        height: 0,\r\n        weight: 0,\r\n        pokeTypes: [],\r\n        bulked:false\r\n    })\r\n\r\n    const [ errorType, setErrorType ] = useState({\r\n        name: \"\",\r\n        attack: \"\",\r\n        defense: \"\",\r\n        hp: \"\",\r\n        velocidad: \"\",\r\n        height: \"\",\r\n        weight: \"\"\r\n    })\r\n\r\n    const resetCheckbox = () => {\r\n        let i = 0;\r\n        let arr = []\r\n        while ( i < window.document.getElementsByClassName(\"selectType-creator\").length) {\r\n            arr.push(window.document.getElementsByClassName(\"selectType-creator\")[i].checked = false)\r\n            i++\r\n        }\r\n        return arr\r\n    }\r\n\r\n    useEffect(() => {\r\n        \r\n        if (created) resetCheckbox();\r\n\r\n        back && setPokemon({\r\n            name: pokeCache.name,\r\n            img: pokeCache.img,\r\n            hp: pokeCache.hp,\r\n            attack: pokeCache.attack,\r\n            defense: pokeCache.defense,\r\n            velocidad: pokeCache.velocidad,\r\n            height: pokeCache.height,\r\n            weight: pokeCache.weight,\r\n            pokeTypes: pokeCache.pokeTypes,\r\n            bulked:false\r\n        })\r\n        \r\n        dispatch( editingAgain())\r\n    }, [dispatch, created, back, pokeCache])\r\n\r\n    const inputValidator = ( event ) =>{\r\n        \r\n        switch ( event.target.name ) {\r\n            case \"pokeName\":\r\n                event.preventDefault();\r\n                const reg = /[^a-zA-Z\\s\\-.]/;\r\n                // Busco cualquier cosa que no sean letras, espacios, puntos o - ( Caracteres permitidos )\r\n                reg.test( event.target.value ) ?\r\n                setErrorType({\r\n                    ...errorType,\r\n                    name: \"Special Characters are not allowed.\"\r\n                }) :\r\n                setErrorType({\r\n                    ...errorType,\r\n                    name: \"\"\r\n                }) \r\n                setPokemon({\r\n                    ...pokemon,\r\n                    name: event.target.value\r\n                }) \r\n                break;\r\n            case \"pokeImg\":\r\n                event.preventDefault();\r\n                setPokemon({\r\n                    ...pokemon,\r\n                    img: event.target.value\r\n                })\r\n                break;\r\n            case \"type\":\r\n                setPokemon(() => {\r\n                    if ( event.target.checked ) {\r\n                        return {\r\n                            ...pokemon,\r\n                            pokeTypes: [ ...pokemon.pokeTypes, event.target.value ]\r\n                        }\r\n                    } else {\r\n                        let filteredTypes = [];\r\n                        let i = 0;\r\n                        while ( i < pokemon.pokeTypes.length ) {\r\n                            if ( pokemon.pokeTypes[i] !== event.target.value ) {\r\n                                filteredTypes = [\r\n                                    ...filteredTypes,\r\n                                    pokemon.pokeTypes[i]\r\n                                ]\r\n                            }\r\n                            i++\r\n                        }\r\n                        return {\r\n                            ...pokemon,\r\n                            pokeTypes: filteredTypes\r\n                        }\r\n                    }\r\n                })\r\n                break;\r\n            case \"attack\":\r\n                ( (event.target.value) > 200 ) ?\r\n                setErrorType({\r\n                    ...errorType,\r\n                    attack: \" Max Attack value is 200\"\r\n                }) :\r\n                setErrorType({\r\n                    ...errorType,\r\n                    attack: \"\"\r\n                })\r\n                setPokemon({\r\n                    ...pokemon,\r\n                    attack: event.target.value\r\n                })\r\n                break;\r\n            case \"defense\":\r\n                ( (event.target.value) > 200 ) ?\r\n                setErrorType({\r\n                    ...errorType,\r\n                    defense: \" Max Defense value is 200\"\r\n                }) :\r\n                setErrorType({\r\n                    ...errorType,\r\n                    defense: \"\"\r\n                })\r\n                setPokemon({\r\n                    ...pokemon,\r\n                    defense: event.target.value\r\n                })\r\n                break;\r\n            case \"hp\":\r\n                ( (event.target.value) > 200 ) ?\r\n                setErrorType({\r\n                    ...errorType,\r\n                    hp: \" Max Hp value is 200\"\r\n                }) :\r\n                setErrorType({\r\n                    ...errorType,\r\n                    hp: \"\"\r\n                })\r\n                setPokemon({\r\n                    ...pokemon,\r\n                    hp: event.target.value\r\n                })\r\n                break;\r\n            case \"velocidad\":\r\n                ( (event.target.value) > 200 ) ?\r\n                setErrorType({\r\n                    ...errorType,\r\n                    velocidad: \" Max Speed value is 200\"\r\n                }) :\r\n                setErrorType({\r\n                    ...errorType,\r\n                    velocidad: \"\"\r\n                })\r\n                setPokemon({\r\n                    ...pokemon,\r\n                    velocidad: event.target.value\r\n                })\r\n                break;\r\n            case \"height\":\r\n                ( (event.target.value) > 200 ) ?\r\n                setErrorType({\r\n                    ...errorType,\r\n                    height: \" Max Height value is 200\"\r\n                }) :\r\n                setErrorType({\r\n                    ...errorType,\r\n                    height: \"\"\r\n                })\r\n                setPokemon({\r\n                    ...pokemon,\r\n                    height: event.target.value\r\n                })\r\n                break;\r\n            case \"weight\":\r\n                ( (event.target.value) > 200 ) ?\r\n                setErrorType({\r\n                    ...errorType,\r\n                    weight: \" Max Weight value is 200\"\r\n                }) :\r\n                setErrorType({\r\n                    ...errorType,\r\n                    weight: \"\"\r\n                })\r\n                setPokemon({\r\n                    ...pokemon,\r\n                    weight: event.target.value\r\n                })\r\n                break;\r\n            default: break;\r\n        }\r\n    }\r\n    \r\n    const handleSubmit = ( event ) => {\r\n        event.preventDefault();\r\n        \r\n        dispatch( createPokemon( pokemon ) )\r\n        setPokemon({\r\n            name: \"\",\r\n            img: \"\",\r\n            hp: 0,\r\n            attack: 0,\r\n            defense: 0,\r\n            velocidad: 0,\r\n            height: 0,\r\n            weight: 0,\r\n            pokeTypes: [],\r\n            bulked:false\r\n        })\r\n       \r\n    }\r\n    \r\n    const handleMainPage = () => {\r\n        dispatch( getAllPokemons() )\r\n    }\r\n    return (\r\n        <>\r\n            <form \r\n            className=\"form\"\r\n            onSubmit={ handleSubmit }\r\n            disabled = {!creating}\r\n            >\r\n            <div className=\"pokeCreator\">\r\n                <div className=\"firstColumn\">\r\n                    <h2>Main Information</h2>\r\n                    <div className=\"conteinerNameImgCreator\">\r\n                        <label className=\"labelNameCreator\" htmlFor=\"\">\r\n                            Name *\r\n                        </label>\r\n                        <input \r\n                        className=\"inputNameCreator\"\r\n                        type=\"text\"\r\n                        name=\"pokeName\"\r\n                        placeholder=\"Nombre del pokemon\"\r\n                        value={ pokemon.name }\r\n                        onChange={ inputValidator }\r\n                        />\r\n                    </div>\r\n                    <div className=\"conteinerNameImgCreator\">\r\n                        <label className=\"labelNameCreator\" htmlFor=\"\">\r\n                            {`Image (url)`}\r\n                        </label>\r\n                        <input \r\n                        className=\"inputNameCreator\"\r\n                        type=\"url\" \r\n                        name=\"pokeImg\"\r\n                        id=\"url\"\r\n                        placeholder=\"https://example.com\"\r\n                        value={ pokemon.img }\r\n                        pattern=\"https://.*\" size=\"30\"\r\n                        required \r\n                        onChange={ inputValidator }\r\n                        />\r\n                        {/* https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/other/home/600.png */}\r\n                    </div>\r\n                    <div className=\"conteinerPhyStatsCreator\">\r\n                        <h2 className=\"titilePhyCreator\">Physical stats</h2>\r\n                        <div className=\"conteinerBattleStatsCreator\">\r\n                            <div className=\"battleStatCreator\">\r\n                                <label className=\"labelPhyCreator\" htmlFor=\"\">Height</label>\r\n                                <input \r\n                                className=\"inputPhyCreator\"\r\n                                type=\"number\"\r\n                                name=\"height\"\r\n                                /* step={5} */\r\n                                min=\"0\" \r\n                                value={ pokemon.height }\r\n                                \r\n                                /* defaultValue={pokeCache.height} */\r\n                                /* defaultValue={\"\"} */\r\n                                onChange = { inputValidator }\r\n                                />\r\n                            </div>\r\n                            <div className=\"battleStatCreator\">\r\n                                <label className=\"labelPhyCreator\" htmlFor=\"\">Weight</label>\r\n                                <input \r\n                                className=\"inputPhyCreator\"\r\n                                type=\"number\"\r\n                                name=\"weight\"\r\n                                /* step={5} */\r\n                                min=\"0\" \r\n                                /* defaultValue={\"\"} */\r\n                                /* defaultValue={pokeCache.weight} */\r\n                                value={ pokemon.weight }\r\n                                onChange = { inputValidator }\r\n                                />\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"conteinerBattleStats-titleCreator\">\r\n                        <h2 className=\"titleBattleStatsCreator\">Battle Stats</h2>\r\n                        <div className=\"conteinerBattleStatsCreator\">\r\n                            <div className=\"battleStatCreator\">\r\n                                <label className=\"labelBattleCreator\" htmlFor=\"\">Attack</label>\r\n                                <input \r\n                                className=\"inputBattleStatsCreator\"\r\n                                type=\"number\"\r\n                                name=\"attack\"\r\n                                /* defaultValue={\"\"} */\r\n                                /* defaultValue={pokeCache.attack} */\r\n                                /* step={5} */\r\n                                min=\"0\" \r\n                                value={ pokemon.attack }\r\n                                onChange = { inputValidator }\r\n                                />\r\n                            </div>\r\n                            <div className=\"battleStatCreator\">\r\n                                <label className=\"labelBattleCreator\" htmlFor=\"\">Defense</label>\r\n                                <input\r\n                                className=\"inputBattleStatsCreator\" \r\n                                type=\"number\"\r\n                                name=\"defense\"\r\n                                /* defaultValue={\"\"} */\r\n                                /* defaultValue={pokeCache.defense} */\r\n                                /* step={5} */\r\n                                min=\"0\" \r\n                                value={ pokemon.defense }\r\n                                onChange = { inputValidator }\r\n                                />\r\n                            </div>\r\n                            <div className=\"battleStatCreator\">\r\n                                <label className=\"labelBattleCreator\" htmlFor=\"\">Hp</label>\r\n                                <input \r\n                                className=\"inputBattleStatsCreator\"\r\n                                type=\"number\"\r\n                                name=\"hp\"\r\n                                /* defaultValue={\"\"} */\r\n                                /* defaultValue={pokeCache.hp} */\r\n                                /* step={5} */\r\n                                min=\"0\" \r\n                                value={ pokemon.hp }\r\n                                onChange = { inputValidator }\r\n                                />\r\n                            </div>\r\n                            <div className=\"battleStatCreator\">\r\n                                <label className=\"labelBattleCreator\" htmlFor=\"\">Speed</label>\r\n                                <input \r\n                                className=\"inputBattleStatsCreator\"\r\n                                type=\"number\"\r\n                                name=\"velocidad\"\r\n                                /* defaultValue={\"\"} */\r\n                                /* defaultValue={pokeCache.velocidad} */\r\n                                /* step={5} */\r\n                                min=\"0\" \r\n                                value={ pokemon.velocidad }\r\n                                onChange = { inputValidator }\r\n                                />\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"conteinerProblemsCreator\">\r\n                        <h2 className=\"titleProblemsCreator\">Problems</h2>\r\n                        <ul className=\"problemsCreator\">\r\n                            {\r\n                                Object.values( errorType ).map(( errorMessage, index ) => {\r\n                                    return (\r\n                                        <li key={ index }> {errorMessage }</li>\r\n                                    )\r\n                                })\r\n                            }\r\n                        </ul>\r\n                    </div>\r\n                    \r\n                    <div className=\"conteinerBtnsCreator\">\r\n                        <div className=\"conteinerBtnMainCreator\">\r\n                            <Link to = '/home'>\r\n                                <button \r\n                                className=\"btnMainCreator\"\r\n                                onClick={ handleMainPage }\r\n                                >Main Page</button>\r\n                            </Link>\r\n                        </div>                      \r\n                        <div className=\"conteinerSubmitCreator\">\r\n                        {   \r\n                            !errorType.name &&\r\n                            !errorType.attack &&\r\n                            !errorType.defense &&\r\n                            !errorType.hp &&\r\n                            !errorType.velocidad &&\r\n                            !errorType.height &&\r\n                            !errorType.weight &&\r\n                            pokemon.name ?\r\n                            <input className=\"submitCreator\" type=\"submit\" value=\"Create!\"/> : \r\n                            <input className=\"submitCreator\" type=\"submit\" value=\"Create!\" disabled/>\r\n                        }\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                {\r\n                    !loading ?\r\n                    <>\r\n                        {\r\n                            creating ?\r\n                            <div className=\"thirdColumn\" >\r\n                                <h2>Preview</h2>\r\n                                <PokePre \r\n                                poke = { pokemon }\r\n                                />\r\n                            </div> :\r\n                            <div className=\"thirdColumn\">\r\n                                <div className=\"fantasma\">\r\n\r\n                            <AfterCreator />\r\n                                </div>\r\n                            </div>\r\n                        }\r\n                    </> :\r\n                    <div className=\"thirdColumn\">\r\n                        <Loading />\r\n                    </div>\r\n                }\r\n                <div className=\"secondColumn\">\r\n                        <h2>Types</h2>\r\n                    <div className=\"typesConteiner\">\r\n                        {\r\n                            types.map(( el, index ) => {\r\n                                return(\r\n                                    <div\r\n                                    key={ index } \r\n                                    className=\"divCheckboxType\"\r\n                                    >\r\n                                        <input\r\n                                        className=\"selectType-creator\" \r\n                                        type=\"checkbox\"\r\n                                        id={ el.name }\r\n                                        name=\"type\"\r\n                                        /* defaultChecked = {\r\n                                           pokeCache.pokeTypes ?\r\n                                           pokeCache.pokeTypes.some( ele => ele === el.name ) :\r\n                                           null\r\n                                        }\r\n                                         */\r\n                                        value={ el.name }\r\n                                        onChange={ inputValidator } \r\n                                        />\r\n                                        <label \r\n                                        htmlFor={ el.name }\r\n                                        className=\"labelTypes\"\r\n                                        >\r\n                                        { el.name }    \r\n                                        </label>\r\n                                    </div>\r\n                                )\r\n                            })\r\n                        }\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            </form> \r\n        </>\r\n    )\r\n}","import React, { useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n\r\nimport { getTypes } from \"../actions\";\r\nimport PokeCreator from \"./PokeCreator\";\r\n\r\nexport default function Form () {\r\n    const dispatch = useDispatch();\r\n    const types = useSelector( state => state.types )\r\n    \r\n    useEffect(() => {\r\n        if ( !types.length ) {\r\n            dispatch( getTypes() )\r\n        }\r\n    }, [ dispatch, types ])\r\n    return (\r\n        <div >\r\n        {\r\n            types.length && <PokeCreator />\r\n        }\r\n        </div>\r\n    )\r\n}","import React from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { getAllPokemons, resetUpdating } from \"../actions\";\r\n\r\nexport default function AfterEditor () {\r\n    const dispatch = useDispatch();\r\n    const updated = useSelector( state => state.updated );\r\n    const messageUpdate = useSelector( state => state.messageUpdate )\r\n    const handleMainPage = () => {\r\n        dispatch( getAllPokemons() );\r\n        dispatch( resetUpdating() );\r\n    };\r\n\r\n    const handleClick = ( event ) => {\r\n        \r\n        dispatch( resetUpdating() );\r\n    };\r\n\r\n    const handleBack = () => {\r\n        dispatch( resetUpdating() );\r\n       /*  dispatch( backToCreator() ); */\r\n    };\r\n\r\n    return(\r\n        <div className=\"afterCreator\">\r\n            <div className=\"conteinerAfter\">\r\n                <div className=\"messageAfter\">\r\n                {\r\n                    /* updated ? \r\n                    <h1> {messageUpdate} </h1> : */\r\n                    <h1> {messageUpdate} </h1>\r\n                }\r\n                </div>\r\n                <div className=\"conteinerBtnsAfter\">\r\n                    <Link className=\"LinkbtnAfter\" to = \"/home\">\r\n                        <button\r\n                        onClick={ handleMainPage }\r\n                        className=\"btnAfter\"\r\n                        >\r\n                            Main Page\r\n                        </button>\r\n                    </Link>\r\n                    {\r\n                        updated ? \r\n                    <button\r\n                    className=\"btnAfter\"\r\n                    onClick={ handleClick }\r\n                    >\r\n                        Volver a Editar\r\n                    </button> :\r\n                        <button\r\n                        className=\"btnAfter\"\r\n                        onClick={ handleBack }\r\n                        >\r\n                            Volver a editar\r\n                        </button> \r\n                    }\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { getTypes, updatePokemon, searchById, getAllPokemons } from \"../actions\";\r\n\r\n\r\nimport AfterEditor from \"./AfterEditor\";\r\nimport Loading from \"./Loading\";\r\nimport PokePre from \"./PokePre\";\r\n\r\nclass PokeEditor extends Component {\r\n\r\n    \r\n    constructor (props) {\r\n        super ( props );\r\n        \r\n        this.state = {\r\n            pokemon: {\r\n                id: 0,\r\n                name: \"\",\r\n                img:  \"\",\r\n                hp:  0,\r\n                attack:  0,\r\n                defense:  0,\r\n                velocidad:  0,\r\n                height:  0,\r\n                weight:  0,\r\n                pokeTypes: [],\r\n                bulked:false\r\n            },\r\n            \r\n            errorType: {\r\n                name: \"\",\r\n                attack: \"\",\r\n                defense: \"\",\r\n                hp: \"\",\r\n                velocidad: \"\",\r\n                height: \"\",\r\n                weight: \"\"\r\n            }\r\n        }\r\n    }\r\n    componentDidMount() {\r\n        this.props.getTypes()\r\n        this.setState({\r\n            ...this.state,\r\n            pokemon: {\r\n                id: this.props.pokeDetail.id,\r\n                name: this.props.pokeDetail.name,\r\n                img:  this.props.pokeDetail.img,\r\n                hp:  this.props.pokeDetail.hp,\r\n                attack:  this.props.pokeDetail.attack,\r\n                defense:  this.props.pokeDetail.defense,\r\n                velocidad:  this.props.pokeDetail.velocidad,\r\n                height:  this.props.pokeDetail.height,\r\n                weight:  this.props.pokeDetail.weight,\r\n                pokeTypes: this.props.pokeDetail.types?.map(el => el.name),\r\n                bulked:false\r\n            }\r\n\r\n        })\r\n\r\n    }\r\n    \r\n    inputValidator = (event) => {\r\n        \r\n        switch ( event.target.name ) {\r\n            case \"pokeName\":\r\n                return this.setState({\r\n                    ...this.state,\r\n                    pokemon: {\r\n                        ...this.state.pokemon,\r\n                        name: event.target.value\r\n                    }\r\n                })\r\n            case \"pokeImg\":\r\n                return this.setState({\r\n                    ...this.state,\r\n                    pokemon: {\r\n                        ...this.state.pokemon,\r\n                        img: event.target.value\r\n                    }\r\n                })\r\n            case \"height\":\r\n                return this.setState({\r\n                    ...this.state,\r\n                    pokemon: {\r\n                        ...this.state.pokemon,\r\n                        height: event.target.value\r\n                    }\r\n                })\r\n            case \"weight\": \r\n                return this.setState({\r\n                    ...this.state,\r\n                    pokemon: {\r\n                        ...this.state.pokemon,\r\n                        weight: event.target.value\r\n                    }\r\n                })\r\n            case \"attack\":\r\n                return this.setState({\r\n                    ...this.state,\r\n                    pokemon: {\r\n                        ...this.state.pokemon,\r\n                        attack: event.target.value\r\n                    }\r\n                })\r\n            case \"defense\":\r\n                return this.setState({\r\n                    ...this.state,\r\n                    pokemon: {\r\n                        ...this.state.pokemon,\r\n                        defense: event.target.value\r\n                    }\r\n                })\r\n            case \"hp\":\r\n                return this.setState({\r\n                    ...this.state,\r\n                    pokemon: {\r\n                        ...this.state.pokemon,\r\n                        hp: event.target.value\r\n                    }\r\n                })\r\n            case \"velocidad\":\r\n                return this.setState({\r\n                    ...this.state,\r\n                    pokemon: {\r\n                        ...this.state.pokemon,\r\n                        velocidad: event.target.value\r\n                    }\r\n                })\r\n            case \"type\":\r\n                \r\n                console.log(event.target.value)\r\n                console.log(event.target.checked)\r\n                return this.setState(() => {\r\n                    if ( event.target.checked ) {\r\n                        return {\r\n                            ...this.state,\r\n                            pokemon: {\r\n                                ...this.state.pokemon,\r\n                                pokeTypes: [\r\n                                    ...this.state.pokemon.pokeTypes,\r\n                                     event.target.value\r\n                                    ]\r\n                            }\r\n                        }\r\n\r\n                    } else {\r\n                        let filtered = [];\r\n                        let i = 0;\r\n                        while ( i < this.state.pokemon.pokeTypes.length ) {\r\n                            if ( this.state.pokemon.pokeTypes[i] !== event.target.value )\r\n                            filtered = [\r\n                                ...filtered,\r\n                                this.state.pokemon.pokeTypes[i]\r\n                            ]\r\n                            i++\r\n                        }\r\n                        return {\r\n                            ...this.state,\r\n                            pokemon: {\r\n                                ...this.state.pokemon,\r\n                                pokeTypes: filtered\r\n                            }\r\n                        }\r\n                    }\r\n                })\r\n                \r\n            default: break;\r\n\r\n        }\r\n\r\n    }\r\n\r\n    handleMainPage = () => {\r\n        this.props.getAllPokemons()\r\n    }\r\n\r\n    \r\n    handleSubmit = ( event ) => {\r\n        event.preventDefault()\r\n        const pokeToUpdate = this.state.pokemon;\r\n        \r\n        this.props.updatePokemon( pokeToUpdate )\r\n    }\r\n    render() {\r\n        \r\n        return(\r\n            <form \r\n            /* className=\"form\" */\r\n            onSubmit={ this.handleSubmit }\r\n            \r\n            >\r\n            <div className=\"pokeCreator\">\r\n                <div className=\"firstColumn\">\r\n                    <h2>Main Information</h2>\r\n                    <div className=\"conteinerNameImgCreator\">\r\n                        <label className=\"labelNameCreator\" htmlFor=\"\">\r\n                            Name *\r\n                        </label>\r\n                        <input \r\n                        className=\"inputNameCreator\"\r\n                        type=\"text\"\r\n                        name=\"pokeName\"\r\n                        placeholder=\"Nombre del pokemon\"\r\n                        defaultValue={ this.props.pokeDetail.name }\r\n                        onChange={ this.inputValidator }\r\n                        />\r\n                    </div>\r\n                    <div className=\"conteinerNameImgCreator\">\r\n                        <label className=\"labelNameCreator\" htmlFor=\"\">\r\n                            {`Image (url)`}\r\n                        </label>\r\n                        <input \r\n                        className=\"inputNameCreator\"\r\n                        type=\"url\" \r\n                        name=\"pokeImg\"\r\n                        id=\"url\"\r\n                        placeholder=\"https://example.com\"\r\n                        defaultValue={ this.props.pokeDetail.img }\r\n                        pattern=\"https://.*\" size=\"30\"\r\n                        required \r\n                        onChange={ this.inputValidator }\r\n                        />\r\n                        {/* https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/other/home/600.png */}\r\n                    </div>\r\n                    <div className=\"conteinerPhyStatsCreator\">\r\n                        <h2 className=\"titilePhyCreator\">Physical stats</h2>\r\n                        <div className=\"conteinerBattleStatsCreator\">\r\n                            <div className=\"battleStatCreator\">\r\n                                <label className=\"labelPhyCreator\" htmlFor=\"\">Height</label>\r\n                                <input \r\n                                className=\"inputPhyCreator\"\r\n                                type=\"number\"\r\n                                name=\"height\"\r\n                                /* step={5} */\r\n                                min=\"0\" \r\n                                defaultValue={ this.props.pokeDetail.height }\r\n                                \r\n                                /* defaultValue={pokeCache.height} */\r\n                                /* defaultValue={\"\"} */\r\n                                onChange = { this.inputValidator }\r\n                                />\r\n                            </div>\r\n                            <div className=\"battleStatCreator\">\r\n                                <label className=\"labelPhyCreator\" htmlFor=\"\">Weight</label>\r\n                                <input \r\n                                className=\"inputPhyCreator\"\r\n                                type=\"number\"\r\n                                name=\"weight\"\r\n                                /* step={5} */\r\n                                min=\"0\" \r\n                                /* defaultValue={\"\"} */\r\n                                /* defaultValue={pokeCache.weight} */\r\n                                defaultValue={ this.props.pokeDetail.weight }\r\n                                onChange = { this.inputValidator }\r\n                                />\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"conteinerBattleStats-titleCreator\">\r\n                        <h2 className=\"titleBattleStatsCreator\">Battle Stats</h2>\r\n                        <div className=\"conteinerBattleStatsCreator\">\r\n                            <div className=\"battleStatCreator\">\r\n                                <label className=\"labelBattleCreator\" htmlFor=\"\">Attack</label>\r\n                                <input \r\n                                className=\"inputBattleStatsCreator\"\r\n                                type=\"number\"\r\n                                name=\"attack\"\r\n                                /* defaultValue={\"\"} */\r\n                                /* defaultValue={pokeCache.attack} */\r\n                                /* step={5} */\r\n                                min=\"0\" \r\n                                defaultValue={ this.props.pokeDetail.attack }\r\n                                onChange = { this.inputValidator }\r\n                                />\r\n                            </div>\r\n                            <div className=\"battleStatCreator\">\r\n                                <label className=\"labelBattleCreator\" htmlFor=\"\">Defense</label>\r\n                                <input\r\n                                className=\"inputBattleStatsCreator\" \r\n                                type=\"number\"\r\n                                name=\"defense\"\r\n                                /* defaultValue={\"\"} */\r\n                                /* defaultValue={pokeCache.defense} */\r\n                                /* step={5} */\r\n                                min=\"0\" \r\n                                defaultValue={ this.props.pokeDetail.defense }\r\n                                onChange = { this.inputValidator }\r\n                                />\r\n                            </div>\r\n                            <div className=\"battleStatCreator\">\r\n                                <label className=\"labelBattleCreator\" htmlFor=\"\">Hp</label>\r\n                                <input \r\n                                className=\"inputBattleStatsCreator\"\r\n                                type=\"number\"\r\n                                name=\"hp\"\r\n                                /* defaultValue={\"\"} */\r\n                                /* defaultValue={pokeCache.hp} */\r\n                                /* step={5} */\r\n                                min=\"0\" \r\n                                defaultValue={ this.props.pokeDetail.hp }\r\n                                onChange = { this.inputValidator }\r\n                                />\r\n                            </div>\r\n                            <div className=\"battleStatCreator\">\r\n                                <label className=\"labelBattleCreator\" htmlFor=\"\">Speed</label>\r\n                                <input \r\n                                className=\"inputBattleStatsCreator\"\r\n                                type=\"number\"\r\n                                name=\"velocidad\"\r\n                                /* defaultValue={\"\"} */\r\n                                /* defaultValue={pokeCache.velocidad} */\r\n                                /* step={5} */\r\n                                min=\"0\" \r\n                                defaultValue={ this.props.pokeDetail.velocidad }\r\n                                onChange = { this.inputValidator }\r\n                                />\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    {/* <div className=\"conteinerProblemsCreator\">\r\n                        <h2 className=\"titleProblemsCreator\">Problems</h2>\r\n                        <ul className=\"problemsCreator\">\r\n                            {\r\n                                Object.values( this.state.errorType ).map(( errorMessage, index ) => {\r\n                                    return (\r\n                                        <li key={ index }> {errorMessage }</li>\r\n                                    )\r\n                                })\r\n                            }\r\n                        </ul>\r\n                    </div> */}\r\n                    \r\n                    <div className=\"conteinerBtnsCreator\">\r\n                        <div className=\"conteinerBtnMainCreator\">\r\n                            <Link to = '/home'>\r\n                                <button \r\n                                className=\"btnMainCreator\"\r\n                                onClick={ this.handleMainPage }\r\n                                >Main Page</button>\r\n                            </Link>\r\n                        </div>                      \r\n                        <div className=\"conteinerSubmitCreator\">\r\n                        {   \r\n                            !this.state.errorType.name &&\r\n                            !this.state.errorType.attack &&\r\n                            !this.state.errorType.defense &&\r\n                            !this.state.errorType.hp &&\r\n                            !this.state.errorType.velocidad &&\r\n                            !this.state.errorType.height &&\r\n                            !this.state.errorType.weight &&\r\n                            this.state.pokemon.name ?\r\n                            <input className=\"submitCreator\" type=\"submit\" value=\"Update!\"/> : \r\n                            <input className=\"submitCreator\" type=\"submit\" value=\"Update!\" disabled/>\r\n                        }\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                {\r\n                    !this.props.loading ?\r\n                    <>\r\n                        {\r\n                            this.props.updating ?\r\n                            <div className=\"thirdColumn\" >\r\n                                <h2>Preview</h2>\r\n                                <PokePre \r\n                                poke = { this.state.pokemon }\r\n                                \r\n                                />\r\n                            </div> :\r\n                            <div className=\"thirdColumn\">\r\n                                <div className=\"fantasma\">\r\n\r\n                            <AfterEditor />\r\n                                </div>\r\n                            </div>\r\n                        }\r\n                    </> :\r\n                    <div className=\"thirdColumn\">\r\n                        <Loading />\r\n                    </div>\r\n                }\r\n                <div className=\"secondColumn\">\r\n                        <h2>Types</h2>\r\n                    <div className=\"typesConteiner\">\r\n                        {\r\n                            this.props.types.map(( el, index ) => {\r\n                                return(\r\n                                    <div\r\n                                    key={ index } \r\n                                    className=\"divCheckboxType\"\r\n                                    >\r\n                                        <input\r\n                                        className=\"selectType-creator\" \r\n                                        type=\"checkbox\"\r\n                                        id={ el.name }\r\n                                        name=\"type\"\r\n                                        value={ el.name }\r\n                                        onChange={ this.inputValidator } \r\n                                        defaultChecked = {\r\n                                            this.props.pokeDetail.types?.some(e => e.name === el.name)\r\n                                        }\r\n                                        />\r\n                                        <label \r\n                                        htmlFor={ el.name }\r\n                                        className=\"labelTypes\"\r\n                                        >\r\n                                        { el.name }    \r\n                                        </label>\r\n                                    </div>\r\n                                )\r\n                            })\r\n                        }\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            </form>\r\n        )\r\n    }\r\n    \r\n}\r\n\r\nconst mapStateToProps = ( state ) => {\r\n    return {\r\n        pokeDetail: state.pokeDetail,\r\n        updating: state.updating,\r\n        creating: state.creating,\r\n        loading: state.loading,\r\n        types: state.types\r\n        \r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = ( dispatch ) => {\r\n    return {\r\n        getAllPokemons: () => dispatch( getAllPokemons() ),\r\n        getTypes: () => dispatch( getTypes() ),\r\n        updatePokemon: ( pokemon ) => dispatch( updatePokemon( pokemon )),\r\n        searchById: ( id ) => dispatch( searchById( id ))\r\n    }\r\n}\r\n\r\nexport default connect( mapStateToProps, mapDispatchToProps )( PokeEditor )","import React from \"react\";\r\nimport { useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { searchById } from \"../actions\";\r\n\r\nimport Loading from \"./Loading\";\r\nimport PokeEditor from \"./PokeEditor\";\r\n\r\nconst Editor = () => {\r\n    const { id } = useParams()\r\n    const dispatch = useDispatch()\r\n    const loading = useSelector ( state => state.loading )\r\n    const pokeDetail = useSelector( state => state.pokeDetail );\r\n    \r\n    useEffect(() => {\r\n        !pokeDetail.name && dispatch( searchById( id ))\r\n    },[ dispatch, id, pokeDetail ])\r\n    return(\r\n        <>\r\n        {\r\n            !loading ? \r\n            <PokeEditor /> :\r\n            <Loading /> \r\n        }\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Editor;","import './App.css';\nimport React from 'react';\nimport { BrowserRouter, Route, Routes } from 'react-router-dom';\nimport LandingPage from './components/Landing';\nimport Home from './components/Home';\nimport PokeDetail from './components/PokeDetail';\nimport Form from './components/Form';\nimport Editor from './components/Editor';\n/* import NavBar from './components/NavBar'; */\n\nfunction App() {\n  return (\n    <BrowserRouter>\n      <div className=\"App\">\n        {/* <NavBar /> */}\n        <Routes>\n          <Route exact path = '/' element = { <LandingPage /> } />\n          <Route path = '/home' element = { <Home /> } />\n          <Route path = '/detail/:id' element = { <PokeDetail /> } />\n          <Route path = '/pokecreator' element = { <Form /> } />\n          <Route path = '/editor/:id' element = { <Editor />} />\n        </Routes>  \n      </div>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { BACK_TO_CREATOR, BULK_CREATE, CHECK_BULK, CLEAN_CACHE, DELETE_POKEMON, EDITING_AGAIN, ERROR_SEARCH_BY_ID, ERROR_SEARCH_BY_NAME, EXISTENT_POKEMON, FAIL_UPDATE, FILTER_BY_ORIGIN, FILTER_BY_TYPE, GET_ALL_POKEMONS, GET_TYPES, LOADING, ORDER_ALPHABETICALLY, ORDER_BY_ATTACK, POKEMON_CREATED, RESET_CREATED, RESET_UPDATING, SEARCH_BY_ID, SEARCH_BY_NAME, SELECT_PAGE, SET_DETAIL, UPDATE_POKEMON } from \"../actionTypes\";\r\n\r\nconst initialState = {\r\n    allPokemons: [],\r\n    pokemons: [],\r\n    types:[],\r\n    pokeDetail: {},\r\n    inDetail: false,\r\n    createdPokemon: {},\r\n    pokeCache:{},\r\n    back: false,\r\n    createAnother: false,\r\n    updating: true,\r\n    creating: true,\r\n    created: false,\r\n    updated:false,\r\n    deleted: false,\r\n    loading: false,\r\n    needBulk: false,\r\n    messageUpdate: \"\",\r\n    errorSearchByName: \"\",\r\n    errorSearchById: \"\",\r\n    page: 1,\r\n    pokemonsPerPage: 12\r\n}\r\n\r\nconst rootReducer = ( state = initialState, action ) => {\r\n    switch( action.type ) {\r\n        case POKEMON_CREATED: \r\n        return {\r\n            ...state,\r\n            creating: false,\r\n            loading:false,\r\n            \r\n            pokeCache:{},\r\n            createdPokemon: action.payload.pokemonCreated,\r\n            created: action.payload.wasCreated\r\n            }\r\n        case DELETE_POKEMON:\r\n            return {\r\n                ...state,\r\n                deleted: true\r\n            }\r\n        case EXISTENT_POKEMON:\r\n            return {\r\n                ...state,\r\n                creating:false,\r\n                created:false,\r\n                loading:false,\r\n            }\r\n        case CLEAN_CACHE:\r\n            return{\r\n                ...state,\r\n                pokeCache:{}\r\n            }\r\n        case BACK_TO_CREATOR:\r\n            return {\r\n                ...state,\r\n                back:true,\r\n                creating:true,\r\n            }\r\n        case EDITING_AGAIN:\r\n            return {\r\n                ...state,\r\n                back:false\r\n            }\r\n        case RESET_CREATED:\r\n            return {\r\n                ...state,\r\n                pokeCache:{},\r\n                created:false,\r\n                createAnother: true,\r\n                creating:true\r\n            }\r\n        case SET_DETAIL: \r\n        return {\r\n            ...state,\r\n            inDetail:true,\r\n            }\r\n        case GET_ALL_POKEMONS:\r\n            return {\r\n                ...state,\r\n                allPokemons: action.payload,\r\n                pokemons: action.payload,\r\n                loading: false,\r\n                inDetail:true,\r\n                deleted: false,\r\n                errorSearchByName: \"\",\r\n                errorSearchById: \"\",\r\n                page: 1\r\n            }\r\n        case GET_TYPES:\r\n            return {\r\n                ...state,\r\n                types: action.payload\r\n            }    \r\n        case SEARCH_BY_NAME:\r\n            return {\r\n                ...state,\r\n                errorSearchByName:\"\",\r\n                loading: false,\r\n                pokemons: action.payload,\r\n                page: 1,\r\n            }\r\n        case \"FILL_CACHE\":\r\n            return {\r\n                ...state,\r\n                pokeCache:action.payload\r\n            }\r\n        case LOADING:\r\n            return {\r\n                ...state,\r\n                /* pokeCache:action.payload, */\r\n                loading: true\r\n            }\r\n        case ERROR_SEARCH_BY_NAME:\r\n            return {\r\n                ...state,\r\n                errorSearchByName: action.payload,\r\n                loading: false\r\n            }\r\n        case SEARCH_BY_ID:\r\n            return {\r\n                ...state,\r\n                pokeDetail:action.payload,\r\n                loading: false\r\n            }\r\n        case ERROR_SEARCH_BY_ID:\r\n            return {\r\n                ...state,\r\n                errorSearchById: action.payload,\r\n                loading: false\r\n            }  \r\n        case FILTER_BY_TYPE:\r\n            const toFilter = state.allPokemons;\r\n            const filtered = ( arreglo ) => {\r\n                const arr = [];\r\n                for( let i = 0; i < arreglo.length; i++) {\r\n                    if ( arreglo[i].types.some( type => type.name === action.payload.toLocaleLowerCase())) {\r\n                        arr.push( arreglo[i] )\r\n                    }\r\n                }\r\n                return arr\r\n            }  \r\n            if ( action.payload === \"All\" ) { \r\n                return {\r\n                    ...state,\r\n                    errorSearchByName: \"\",\r\n                    pokemons:toFilter,\r\n                    page: 1\r\n                }\r\n            } else if ( filtered( toFilter ).length) {\r\n                return {\r\n                    ...state,\r\n                    errorSearchByName: \"\",\r\n                    pokemons: filtered( toFilter ),\r\n                    page: 1\r\n                }\r\n            } else {\r\n                return {\r\n                    ...state,\r\n                    errorSearchByName:\"No hay pokes de ese tipo\"\r\n                }\r\n            }\r\n        case FILTER_BY_ORIGIN:\r\n            const toFilterByOrigin = state.allPokemons;\r\n            if ( action.payload === \"db\") {\r\n\r\n                const fromDb = toFilterByOrigin.filter(( pokemon ) => {\r\n                    return pokemon.fromdb\r\n                })\r\n                if ( fromDb.length ) {\r\n                    return {\r\n                        ...state,\r\n                        page: 1,\r\n                        errorSearchByName: \"\",\r\n                        pokemons: fromDb\r\n                    }\r\n                } else {\r\n                    return {\r\n                        ...state,\r\n                        page: 1,\r\n                        errorSearchByName: \"No hay pokes de base de datos\"\r\n                    }\r\n                }\r\n                \r\n            } else {\r\n                const fromApi = toFilterByOrigin.filter(( pokemon ) => {\r\n                    return !pokemon.fromdb\r\n                })\r\n                return {\r\n                    ...state,\r\n                    page: 1,\r\n                    errorSearchByName:\"\",\r\n                    pokemons: fromApi\r\n                }\r\n            }    \r\n        case ORDER_BY_ATTACK:\r\n            const toOrderByAttack = state.pokemons;\r\n            const attackOrder = ( array ) => {\r\n                \r\n                if( array.length <= 1 ) return array;\r\n\r\n                let pivot = array[0];\r\n                let left = [];\r\n                let right = [];\r\n\r\n                for ( let i = 1; i < array.length; i++ ) {\r\n                    if( array[i].attack < pivot.attack ) {\r\n                        left.push( array[i] );\r\n                    } else {\r\n                        right.push( array[i] );\r\n                    }\r\n                }\r\n                /* console.log(\"ordenando\") */\r\n                switch ( action.payload ) {\r\n                    case 'ASC':\r\n                        return [ ...attackOrder( left ), pivot, ...attackOrder( right ) ];\r\n                    case 'DSC':\r\n                        return [ ...attackOrder( right ), pivot, ...attackOrder( left ) ];\r\n                    default: break;\r\n                }\r\n                return array;\r\n            }\r\n            return {\r\n                ...state,\r\n                page: 1,\r\n                pokemons: attackOrder( toOrderByAttack )\r\n            }\r\n        case ORDER_ALPHABETICALLY:\r\n            const ToOrderAlphabetically = state.pokemons;\r\n            const alphabeticOrder = ( array ) => {\r\n                if ( array.length <= 1) return array;\r\n                let pivot = array[0];\r\n                let left = [];\r\n                let right = [];\r\n                for ( let i = 1; i < array.length; i++ ) {\r\n                    if ( array[i].name.toLocaleLowerCase() < pivot.name.toLocaleLowerCase() ) {\r\n                        left.push( array[i] );\r\n                    } else {\r\n                        right.push( array[i] );\r\n                    }\r\n                };\r\n                if ( action.payload === \"ASC\" ) {\r\n                    return [ ...alphabeticOrder( left ), pivot, ...alphabeticOrder( right ) ]\r\n                }\r\n                if ( action.payload === \"DSC\" ) {\r\n                    return [ ...alphabeticOrder( right ), pivot, ...alphabeticOrder( left ) ]\r\n                } else {\r\n                    return array;\r\n                }\r\n            }    \r\n            return {\r\n                ...state,\r\n                page: 1,\r\n                pokemons: alphabeticOrder( ToOrderAlphabetically )\r\n            }    \r\n        case SELECT_PAGE:\r\n            return {\r\n                ...state,\r\n                page: action.payload\r\n            }\r\n        case BULK_CREATE:\r\n            return {\r\n                ...state,\r\n                inDetail:false,\r\n                bulkDone: true\r\n            }\r\n        case CHECK_BULK:\r\n            const pokes = state.allPokemons;\r\n            const bulked = pokes.some(( poke ) => {\r\n                return poke.bulked\r\n            })\r\n            if ( !bulked ) {\r\n                return {\r\n                    ...state,\r\n                    needBulk: true,\r\n                }\r\n            } else {\r\n                return {\r\n                    ...state,\r\n                    needBulk: false\r\n                }\r\n            }    \r\n        case UPDATE_POKEMON: \r\n            return {\r\n                ...state,\r\n                loading:false,\r\n                updating:false,\r\n                updated:true,\r\n                pokeDetail:action.payload.up,\r\n                messageUpdate: action.payload.data\r\n            }\r\n        case RESET_UPDATING:\r\n            return {\r\n                ...state,\r\n                updating: true,\r\n                updated: false,\r\n                \r\n            }\r\n        case FAIL_UPDATE:\r\n            return {\r\n                ...state,\r\n                loading:false,\r\n                updating:false,\r\n                messageUpdate: action.payload.data\r\n            }\r\n        default: return state\r\n    }\r\n}\r\n\r\nexport default rootReducer;","import { createStore, applyMiddleware, compose } from \"redux\";\r\nimport rootReducer from \"../reducer\";\r\nimport thunk from \"redux-thunk\";\r\n\r\n\r\n\r\nconst store = createStore (\r\n    rootReducer,\r\n    compose(applyMiddleware(thunk), window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__())\r\n)\r\n\r\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nimport  store  from './store';\nimport { Provider } from 'react-redux';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store = { store }>\n      <App />\n    </Provider>,\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}