{"version":3,"sources":["components/Landing.jsx","actionTypes/index.js","actions/index.js","components/Loading.jsx","components/SearchByName.jsx","components/PaginadoButtons.jsx","components/FilterByType.jsx","components/PaginadoArrows.jsx","components/OrderByAttack.jsx","components/OrderAlphabetically.jsx","components/FilterByOrigin.jsx","components/NavBar.jsx","components/PokeMessage.jsx","components/Pokemon.jsx","components/Home.jsx","components/PokeDetail.jsx","components/AfterCreator.jsx","components/PokePre.jsx","components/PokeCreator.jsx","components/Form.jsx","components/AfterEditor.jsx","components/PokeEditor.jsx","components/Editor.jsx","App.js","reportWebVitals.js","reducer/index.js","store/index.js","index.js"],"names":["LandingPage","className","to","GET_ALL_POKEMONS","GET_TYPES","SELECT_PAGE","SEARCH_BY_NAME","ERROR_SEARCH_BY_NAME","SEARCH_BY_ID","ERROR_SEARCH_BY_ID","LOADING","FILTER_BY_TYPE","FILTER_BY_ORIGIN","ORDER_BY_ATTACK","ORDER_ALPHABETICALLY","POKEMON_CREATED","ERROR_CREATED","EXISTENT_POKEMON","BACK_TO_CREATOR","RESET_CREATED","EDITING_AGAIN","SET_DETAIL","CLEAN_CACHE","DELETE_POKEMON","BULK_CREATE","CHECK_BULK","UPDATE_POKEMON","RESET_UPDATING","FAIL_UPDATE","getAllPokemons","dispatch","axios","then","resp","console","log","type","payload","data","catch","error","response","getTypes","searchById","id","pokemon","selectPage","number","resetCreator","resetUpdating","Loading","SearchByName","useDispatch","useState","name","setName","onSubmit","event","preventDefault","length","isFinite","parseInt","trim","searchByName","toLowerCase","value","placeholder","onChange","target","PaginadoButtons","pokemons","useSelector","state","pokemonsPerPage","actualPage","page","quantityOfButtons","Math","ceil","handleClick","arrButtons","push","buttons","map","onClick","FiterByType","types","useEffect","defaultValue","filterByType","window","document","getElementsByClassName","hidden","PaginadoArrows","OrderByAttack","orderType","orderByAttack","OrderAlphabetically","orderAlphabetically","FilterByOrigin","origin","NavBar","pokeQuantity","errorSearchByName","needBulk","handleBulk","post","src","alt","disabled","PokeMessage","img","replace","toUpperCase","Pokemon","attack","errorSearchById","activeFilter","index","Home","loading","inDetail","lastPokemon","firstPokemon","pokemonsOnScreen","slice","poke","PokeDetail","useParams","pokeDetail","deleted","barStyleAttack","padding","height","width","border","background","round","barStyleDef","defense","barStyleHp","hp","barStyleSpeed","velocidad","alert","setAlert","handleAlert","weight","fromdb","delete","deletePokemon","style","AfterCreator","props","created","errorCreated","pokeCache","PokePre","pokeTypes","el","PokeCreator","creating","back","createdPokemon","bulked","setPokemon","errorType","setErrorType","i","arr","checked","resetCheckbox","inputValidator","regExpNum","test","filteredTypes","createPokemon","htmlFor","pattern","size","required","min","Object","values","errorMessage","defaultChecked","some","ele","Form","AfterEditor","updated","messageUpdate","PokeEditor","setState","filtered","handleMainPage","handleSubmit","pokeToUpdate","updatePokemon","this","problems","updating","e","Component","connect","put","up","Editor","App","exact","path","element","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","initialState","allPokemons","createAnother","rootReducer","action","pokemonCreated","wasCreated","toFilter","arreglo","toLocaleLowerCase","toFilterByOrigin","fromDb","filter","fromApi","toOrderByAttack","attackOrder","array","pivot","left","right","ToOrderAlphabetically","alphabeticOrder","bulkDone","pokes","store","createStore","compose","applyMiddleware","thunk","__REDUX_DEVTOOLS_EXTENSION__","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.c72664c4.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nexport default function LandingPage () {\r\n\r\n    return (\r\n    <div className=\"landingPage\">\r\n        <Link to = '/home'>\r\n        \r\n            <button className=\"conteinerstartBtn\"></button>\r\n        \r\n        </Link>\r\n    </div>\r\n    )\r\n}\r\n\r\n","export const GET_ALL_POKEMONS = \"GET_ALL_POKEMONS\"; \r\nexport const GET_TYPES = \"GET_TYPES\";\r\nexport const LOADED_TYPES = \"LOADED_TYPES\";\r\nexport const SELECT_PAGE = \"SELECT_PAGE\";\r\nexport const SEARCH_BY_NAME = \"SEARCH_BY_NAME\";\r\nexport const ERROR_SEARCH_BY_NAME = \"ERROR_SEARCH_BY_NAME\";\r\nexport const SEARCH_BY_ID = \"SEARCH_BY_ID\";\r\nexport const ERROR_SEARCH_BY_ID = \"ERROR_SEARCH_BY_ID\";  \r\nexport const LOADING = \"LOADING\";\r\n\r\nexport const FILTER_BY_TYPE = \"FILTER_BY_TYPE\";\r\nexport const FILTER_BY_ORIGIN = \"FILTER_BY_ORIGIN\";\r\nexport const ORDER_BY_ATTACK = \"ORDER_BY_ATTACK\";\r\nexport const ORDER_ALPHABETICALLY = \"ORDER_ALPHABETICALLY\";\r\n\r\nexport const POKEMON_CREATED = \"POKEMON_CREATED\"; \r\nexport const ERROR_CREATED = \"ERROR_CREATED\"; \r\nexport const EXISTENT_POKEMON = \"EXISTENT_POKEMON\"; \r\nexport const BACK_TO_CREATOR = \"BACK_TO_CREATOR\"; \r\nexport const RESET_CREATED = \"RESET_CREATED\";\r\nexport const EDITING_AGAIN = \"EDITING_AGAIN\";\r\nexport const SET_DETAIL = \"SET_DETAIL\";\r\nexport const CLEAN_CACHE = \"CLEAN_CACHE\";\r\n\r\nexport const DELETE_POKEMON = \"DELETE_POKEMON\";\r\nexport const BULK_CREATE = \"BULK_CREATE\";\r\nexport const CHECK_BULK = \"CHECK_BULK\";\r\n\r\n\r\nexport const UPDATE_POKEMON = \"UPDATE_POKEMON\";\r\nexport const RESET_UPDATING = \"RESET_UPDATING\";\r\nexport const FAIL_UPDATE = \"FAIL_UPDATE\";","import axios from 'axios';\r\nimport { BACK_TO_CREATOR, BULK_CREATE, CHECK_BULK, CLEAN_CACHE, DELETE_POKEMON, EDITING_AGAIN, ERROR_CREATED, ERROR_SEARCH_BY_ID, ERROR_SEARCH_BY_NAME, EXISTENT_POKEMON, FAIL_UPDATE, FILTER_BY_ORIGIN, FILTER_BY_TYPE, GET_ALL_POKEMONS, GET_TYPES, LOADING, ORDER_ALPHABETICALLY, ORDER_BY_ATTACK, POKEMON_CREATED, RESET_CREATED, RESET_UPDATING, SEARCH_BY_ID, SEARCH_BY_NAME, SELECT_PAGE, SET_DETAIL, UPDATE_POKEMON } from '../actionTypes';\r\n\r\nexport const getAllPokemons = () => {\r\n    return dispatch => {\r\n        axios(`/pokemons`)\r\n            .then(( resp ) => {\r\n                console.log('getAllPokemons')\r\n                return dispatch({\r\n                type: GET_ALL_POKEMONS,\r\n                payload: resp.data\r\n                })\r\n            })\r\n            .catch(( error ) => {\r\n                console.log( error.response.data )\r\n            })\r\n    }\r\n};\r\nexport const getTypes = () => {\r\n    return dispatch => {\r\n        dispatch({\r\n            type: LOADING,\r\n        })\r\n        \r\n        console.log('getTypes')\r\n        axios(`/types`)\r\n        .then(( response ) => {\r\n            return dispatch({\r\n            type: GET_TYPES,\r\n            payload: response.data\r\n        })})\r\n        .catch(( error ) => {\r\n            console.log( error )\r\n        })\r\n    }\r\n}\r\nexport const searchByName = ( name ) => {\r\n    return ( dispatch ) => {\r\n        dispatch({\r\n            type: LOADING\r\n        })\r\n        axios(`/pokemons?name=${name.trim()}`)\r\n        .then(( response ) => {\r\n            return dispatch({\r\n                type: SEARCH_BY_NAME,\r\n                payload: response.data\r\n            })\r\n        })\r\n        .catch(( error ) => {\r\n            return dispatch ({\r\n                type: ERROR_SEARCH_BY_NAME,\r\n                payload: error.response.data\r\n            })\r\n        })\r\n    }\r\n};\r\nexport const searchById = ( id ) => {\r\n    return ( dispatch ) => {\r\n        dispatch({\r\n            type: LOADING\r\n        })\r\n        axios(`/detail/${id}`)\r\n        .then(( pokemon ) => {\r\n            dispatch({\r\n                type: SEARCH_BY_ID,\r\n                payload: pokemon.data\r\n            })\r\n        })\r\n        .catch(( error ) => {\r\n            console.log(error.response)\r\n            dispatch({\r\n                type: ERROR_SEARCH_BY_ID,\r\n                payload: ('invalid ID')\r\n            })\r\n        })\r\n    }\r\n}\r\nexport const filterByType = ( type ) => {\r\n    return {\r\n        type: FILTER_BY_TYPE,\r\n        payload: type\r\n    }\r\n}\r\nexport const filterByOrigin = ( origin ) => {\r\n    return {\r\n        type: FILTER_BY_ORIGIN,\r\n        payload: origin\r\n    }\r\n}\r\nexport const orderByAttack = ( orderType ) => {\r\n    return {\r\n        type: ORDER_BY_ATTACK,\r\n        payload: orderType\r\n    }\r\n}\r\nexport const orderAlphabetically = ( orderType ) => {\r\n    return {\r\n        type: ORDER_ALPHABETICALLY,\r\n        payload: orderType\r\n    }\r\n}\r\nexport const createPokemon = ({\r\n    name,\r\n    img,\r\n    hp,\r\n    attack,\r\n    defense,\r\n    velocidad,\r\n    height,\r\n    weight,\r\n    pokeTypes,\r\n    bulked\r\n}) => {\r\n    return ( dispatch ) => {\r\n        dispatch({\r\n            type: LOADING,\r\n        })\r\n        \r\n        axios(`/pokemons?name=${name.trim()}`)\r\n        .then(() => {\r\n            dispatch({\r\n                type: \"FILL_CACHE\",\r\n                payload: {\r\n                name,\r\n                img,\r\n                hp,\r\n                attack,\r\n                defense,\r\n                velocidad,\r\n                height,\r\n                weight,\r\n                pokeTypes,\r\n                bulked\r\n                }\r\n            })\r\n            dispatch({\r\n                type: EXISTENT_POKEMON\r\n            })\r\n            \r\n        })\r\n        .catch(() => {\r\n            axios.post(`/pokemons`, {\r\n                name,\r\n                img,\r\n                hp,\r\n                attack,\r\n                defense,\r\n                velocidad,\r\n                height,\r\n                weight,\r\n                pokeTypes,\r\n                bulked\r\n            })\r\n            .then(( response ) => {\r\n                console.log('se hizo el post')\r\n                console.log(response.data)\r\n                return dispatch({\r\n                    type: POKEMON_CREATED,\r\n                    payload: response.data\r\n                })\r\n            })\r\n            .catch(( error ) => {\r\n                console.log(error.response.data)\r\n                dispatch({\r\n                    type: \"FILL_CACHE\",\r\n                    payload: {\r\n                    name,\r\n                    img,\r\n                    hp,\r\n                    attack,\r\n                    defense,\r\n                    velocidad,\r\n                    height,\r\n                    weight,\r\n                    pokeTypes,\r\n                    bulked\r\n                    }\r\n                })\r\n                dispatch({\r\n                    type:ERROR_CREATED,\r\n                    payload: error.response.data\r\n                })\r\n                console.log( error )\r\n            })\r\n        })\r\n        \r\n    }\r\n}\r\nexport const backToCreator = () => {\r\n    return {\r\n        type: BACK_TO_CREATOR\r\n    }\r\n}\r\nexport const editingAgain = () => {\r\n    return {\r\n        type: EDITING_AGAIN\r\n    }\r\n}\r\nexport const selectPage = ( number ) => {\r\n    return {\r\n        type: SELECT_PAGE,\r\n        payload: number\r\n    }\r\n}\r\nexport const resetCreator = () => {\r\n    return {\r\n        type: RESET_CREATED\r\n    }\r\n}\r\nexport const cleanCache = () => {\r\n    return {\r\n        type: CLEAN_CACHE\r\n    }\r\n}\r\nexport const setDetail = () => {\r\n    return {\r\n        type: SET_DETAIL\r\n    }\r\n}\r\nexport const deletePokemon = ( id ) => {\r\n    return ( dispatch ) => {\r\n        axios.delete(`/pokemons/${id}`)\r\n        .then(( response ) => dispatch({\r\n            type: DELETE_POKEMON,\r\n            payload: response.data\r\n        }))\r\n        .catch(( error ) => {\r\n            console.log( error )\r\n        });\r\n    }\r\n}\r\nexport const bulkCreate = () => {\r\n    return ( dispatch ) => {\r\n\r\n        axios.post(`/pokeomons/bulkCreate`)\r\n        \r\n        .then( () => {\r\n            console.log(\"Bulk Done\")\r\n            return dispatch({\r\n                type: BULK_CREATE\r\n            })\r\n        })\r\n        .catch(() => {\r\n            console.log(\"hubo problemas con el bulk\")\r\n        })\r\n    }\r\n}\r\nexport const checkBulk = () => {\r\n    return {\r\n        type: CHECK_BULK\r\n    }\r\n}\r\n\r\nexport const updatePokemon = ({\r\n    id,\r\n    name,\r\n    img,\r\n    hp,\r\n    attack,\r\n    defense,\r\n    velocidad,\r\n    height,\r\n    weight,\r\n    pokeTypes,\r\n    bulked\r\n}) => {\r\n    return (dispatch) => {\r\n        dispatch({\r\n            type: LOADING\r\n        })\r\n        axios.put(`/pokemons/update/${id}`, {\r\n            name,\r\n            img,\r\n            hp,\r\n            attack,\r\n            defense,\r\n            velocidad,\r\n            height,\r\n            weight,\r\n            pokeTypes,\r\n            bulked\r\n        })\r\n        .then(( response ) => {\r\n            console.log(response.data.up)\r\n            return dispatch({\r\n                type: UPDATE_POKEMON,\r\n                payload: response.data\r\n            })\r\n        })\r\n        .catch(( error ) => {\r\n            console.log ( error.response.data )\r\n            dispatch({\r\n                type: FAIL_UPDATE,\r\n                payload: error.response.data\r\n            })\r\n        })\r\n    }\r\n}\r\n\r\nexport const resetUpdating = () => {\r\n    return {\r\n        type: RESET_UPDATING\r\n    }\r\n}","import React from \"react\";\r\n\r\nconst Loading = () => {\r\n    return (\r\n        <div className=\"loadingPage\">\r\n            <button className=\"conteinerstartBtn\"></button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Loading;","import React from \"react\";\r\nimport { useState } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\n\r\nimport { searchByName } from \"../actions\";\r\n\r\nexport default function SearchByName () {\r\n\r\n    const dispatch = useDispatch();\r\n    const [ name, setName ] = useState( \"\" );\r\n\r\n    const handleSubmit = ( event ) => {\r\n        event.preventDefault();\r\n        name.length && !isFinite(parseInt(name)) && dispatch( searchByName( name.toLowerCase() ) ); \r\n        setName( '' );   \r\n    }\r\n    \r\n    const handleChange = ( event ) => {\r\n        event.preventDefault();\r\n        setName( event.target.value )\r\n    }\r\n    return (\r\n        <form \r\n        onSubmit={ handleSubmit }\r\n        >\r\n            <input \r\n            className=\"inputSearchByNameNav\"\r\n            type=\"text\"\r\n            value={ name }\r\n            placeholder=\"Search by name\"\r\n            onChange={ handleChange }  \r\n            />\r\n            <input \r\n            className=\"buttonSearchByNameNav\"\r\n            type=\"submit\"\r\n            value={\"Search\"}\r\n            />\r\n        </form>\r\n    )\r\n}","import React from \"react\";\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n\r\nimport { selectPage } from \"../actions\";\r\n\r\nconst PaginadoButtons = () => {\r\n\r\n    const dispatch = useDispatch(),\r\n\r\n    pokemons = useSelector( state => state.pokemons ),\r\n    pokemonsPerPage = useSelector( state => state.pokemonsPerPage ),\r\n    actualPage = useSelector( state => state.page ),\r\n\r\n    quantityOfButtons = Math.ceil( pokemons.length/pokemonsPerPage),\r\n\r\n    buttons = ( quantityOfButtons ) => {\r\n        let arrButtons = [],\r\n        page = 1;\r\n        while ( page <= quantityOfButtons ) {\r\n            arrButtons.push( page );\r\n            page++\r\n        };\r\n        \r\n        return arrButtons;\r\n    },\r\n\r\n    handleClick = ( event ) => {\r\n        event.preventDefault();\r\n        const page = event.target.value;\r\n        dispatch( selectPage( parseInt( page ) ));\r\n    }\r\n\r\n    return (\r\n        <div className=\"paginadoArrowsBtnNav\">\r\n            {\r\n                buttons( quantityOfButtons ).map(( page ) => {\r\n                    return (\r\n                        <button\r\n                        key={ page }\r\n                        value={ page }\r\n                        className={( actualPage === page ) ? \r\n                            \"btnPageFocus\" : \r\n                            \"btnPage\"}\r\n                        onClick={ handleClick }\r\n                        > { page } </button>\r\n                    )\r\n                })\r\n            }\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default PaginadoButtons;","import React from \"react\";\r\nimport { useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n\r\nimport { filterByType, getTypes } from \"../actions\";\r\n\r\nexport default function FiterByType () {\r\n\r\n    const dispatch = useDispatch();\r\n    const types = useSelector( state => state.types );\r\n\r\n    useEffect(() => {\r\n        !types.length && dispatch( getTypes() )\r\n    }, [ dispatch, types ])\r\n\r\n    const handleSelect = ( event ) => {\r\n        const type = event.target.value;\r\n        console.log(type)\r\n        dispatch( filterByType( type ) )\r\n        window.document.getElementsByClassName(\"selectType\")[0].value = \"Types\";\r\n    }\r\n\r\n\r\n    return (\r\n        <div className=\"conteinerSelectTypeNav\">\r\n            \r\n            <select className=\"selectType\" defaultValue=\"Types\" onChange = { handleSelect } >\r\n                <option value=\"Types\" hidden >Types</option>\r\n                <option value=\"All\">All types</option>\r\n                {\r\n                    types.map(( type ) => {\r\n                        return (\r\n                            <option\r\n                            key={ type.id } \r\n                            value = { type.name } \r\n                            > { type.name } </option>\r\n                        )\r\n                    })\r\n                }\r\n            </select>\r\n        </div>\r\n    )\r\n}","import React from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n\r\nimport { selectPage } from \"../actions\";\r\n\r\nexport default function PaginadoArrows () {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const pokemons = useSelector( state => state.pokemons );\r\n    const pokemonsPerPage = useSelector( state => state.pokemonsPerPage );\r\n    const page = useSelector( state => state.page );\r\n\r\n    const quantityOfButtons = Math.ceil( pokemons.length/pokemonsPerPage);\r\n\r\n    const handlePrev = () => {\r\n        let prev = page - 1;\r\n        ( page !== 1 ) &&  dispatch( selectPage( prev ) );\r\n    };\r\n\r\n    const handleNext = () => {\r\n        let next = page + 1;\r\n        ( page !== quantityOfButtons ) && dispatch( selectPage( next ));\r\n    }\r\n    return (\r\n        <div className=\"paginadoArrows\" >\r\n            <div className=\"paginadoArrowsBtnNav\">\r\n                {\r\n                    ( page !== 1 ) ?\r\n                    <div>\r\n                        <button\r\n                        className=\"btnPageArrow\"\r\n                        onClick={ handlePrev }\r\n                        > ◀ </button>\r\n                    </div> : null\r\n                }\r\n            </div>\r\n            <div className=\"paginadoArrowsBtnNav\">\r\n                <div> {`${page} / ${quantityOfButtons}`} </div>\r\n            </div>\r\n            <div className=\"paginadoArrowsBtnNav\">\r\n                {\r\n                    ( page !== quantityOfButtons ) ?\r\n                    <div>\r\n                        <button\r\n                        className=\"btnPageArrow\"\r\n                        onClick={ handleNext }\r\n                        >▶</button>\r\n                    </div> : null\r\n                }\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React from \"react\";\r\nimport { useDispatch } from \"react-redux\"\r\n\r\nimport { orderByAttack } from \"../actions\";\r\n\r\nexport default function OrderByAttack () {\r\n\r\n    const dispatch = useDispatch()\r\n    \r\n\r\n    const handleAttackOrder = ( event ) => {\r\n        event.preventDefault();\r\n        const orderType = event.target.value;\r\n        console.log(orderType)\r\n        dispatch( orderByAttack( orderType ) )\r\n        window.document.getElementsByClassName(\"selectOrderNav\")[0].value = \"Attack Order\";\r\n    }\r\n\r\n    return (\r\n        <div className=\"conteinerInputOrderNav\">\r\n            <select className=\"selectOrderNav\" defaultValue={\"Attack Order\"} onChange={ handleAttackOrder }>\r\n                <option value=\"Attack Order\" hidden> Attack Order </option>\r\n                <option value=\"ASC\"> Lowest first </option>\r\n                <option value=\"DSC\"> Highest first </option>\r\n            </select>\r\n        </div>\r\n    )\r\n}\r\n\r\n","import React from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n\r\nimport { orderAlphabetically } from \"../actions\";\r\n\r\nexport default function OrderAlphabetically () {\r\n    const dispatch = useDispatch();\r\n    const pokemons = useSelector( state => state.pokemons );\r\n\r\n    const handleOrder = ( event ) => {\r\n        event.preventDefault();\r\n        const orderType = event.target.value;\r\n        pokemons.length && dispatch( orderAlphabetically( orderType ))\r\n        window.document.getElementsByClassName(\"selectOrderAlphNav\")[0].value = \"Alphabetic Order\";\r\n    }\r\n    return (\r\n        <div className=\"conteinerInputOrderNav\">\r\n            <select className=\"selectOrderAlphNav\" defaultValue={\"Alphabetic Order\"} onChange={ handleOrder }>\r\n                <option value={\"Alphabetic Order\"} hidden>Alphabetic Order</option>\r\n                <option value=\"ASC\">A-Z</option>\r\n                <option value=\"DSC\">Z-A</option>\r\n            </select>\r\n        </div>\r\n    )\r\n}","import React from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { filterByOrigin } from \"../actions\";\r\n\r\nconst FilterByOrigin = () => {\r\n    const dispatch = useDispatch();\r\n    const handleChange = ( event ) =>{\r\n        event.preventDefault();\r\n        dispatch( filterByOrigin( event.target.value ) );\r\n        window.document.getElementsByClassName(\"selectOrigin\")[0].value = \"Origin\";\r\n    }\r\n    return (\r\n        <div className=\"conteinerFilterByOriginNav\">\r\n            <select className=\"selectOrigin\" defaultValue={\"Origin\"} onChange={ handleChange }>\r\n                <option value=\"Origin\" hidden> Origin </option>\r\n                <option value=\"api\"> Api </option>\r\n                <option value=\"db\"> Data Base </option>\r\n            </select>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default FilterByOrigin;","import React from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport SearchByName from \"./SearchByName\";\r\nimport PaginadoButtons from \"./PaginadoButtons\";\r\nimport FilterByType from \"./FilterByType\"\r\nimport PaginadoArrows from \"./PaginadoArrows\";\r\nimport OrderByAttack from \"./OrderByAttack\";\r\nimport OrderAlphabetically from \"./OrderAlphabetically\";\r\nimport FilterByOrigin from \"./FilterByOrigin\";\r\n\r\nimport { bulkCreate, getAllPokemons, resetCreator } from \"../actions\";\r\n\r\nexport default function NavBar () {\r\n\r\n    const dispatch = useDispatch();\r\n    const pokeQuantity = useSelector( state => state.pokemons );\r\n    const errorSearchByName = useSelector( state => state.errorSearchByName );\r\n    const needBulk = useSelector( state => state.needBulk );\r\n\r\n    const handleBtnCreate = () => {\r\n        dispatch( resetCreator() );\r\n    };\r\n\r\n    const handleClick = ( event ) => {\r\n        event.preventDefault();\r\n        dispatch( getAllPokemons() );\r\n    };\r\n\r\n    const handleBulk = () => {\r\n        dispatch( bulkCreate() );\r\n    };\r\n\r\n    return (\r\n        <div className=\"interiorNavbar\">\r\n            <div className=\"principalTitle\">\r\n                 <img className=\"titile\" src=\"http://24.media.tumblr.com/232a91726b505a0e8ef44648ca7cc854/tumblr_mjflojSWnr1s1byhpo1_500.gif\" alt=\"Img not found\" />\r\n            </div>\r\n            <div className=\"quantity\">\r\n                { \r\n                    !errorSearchByName.length ? \r\n                    pokeQuantity.length > 1 ?\r\n                    <div>We found {pokeQuantity.length} pokemons </div> :\r\n                    <div>We found {pokeQuantity.length} pokemon </div> :\r\n                    null\r\n                }\r\n            </div>\r\n            <div className=\"conteinerSearchByNameNav\">\r\n                <SearchByName />\r\n            </div>\r\n\r\n            <div className=\"conteinerPaginadoNav\">\r\n                <PaginadoButtons />\r\n                <PaginadoArrows />\r\n            </div>\r\n            <div className=\"conteinerFiltersNav\">\r\n                <FilterByType />\r\n                <FilterByOrigin />\r\n            </div>\r\n        \r\n            <div className=\"conteinerOrderNav\">\r\n                <OrderByAttack />\r\n                <OrderAlphabetically />\r\n            </div>\r\n            <div className=\"createPokemonNav\">\r\n                <h2>Create your own Pokemon!</h2>\r\n            <div>\r\n                <Link to = '/pokecreator'>\r\n                    <button\r\n                    className=\"BtnCreatePokemonsNav\"\r\n                    onClick={ handleBtnCreate }\r\n                    >\r\n                        Create!\r\n                    </button>\r\n                </Link>\r\n            </div>\r\n            <div className=\"bulkbtnNav\">\r\n                {\r\n                    needBulk ? \r\n                    <button\r\n                    className=\"BtnCreatePokemonsNav\"\r\n                    onClick={ handleBulk }\r\n                    >\r\n                        BulkCreator\r\n                    </button> : \r\n                    <button\r\n                    disabled\r\n                    className=\"BtnCreatePokemonsNav\"\r\n                    onClick={ handleBulk }\r\n                    >\r\n                        BulkCreator\r\n                    </button>\r\n                }\r\n            </div>\r\n            <div className=\"conteinerBtnAllPokemonsNav\">\r\n                <button\r\n                className=\"BtnAllPokemonsNav\"\r\n                onClick={ handleClick }\r\n                >\r\n                    Show All Pokemons\r\n                </button>\r\n            </div>\r\n            </div>\r\n        </div>\r\n    )\r\n};","import React from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport { getAllPokemons } from \"../actions\";\r\n\r\nexport default function PokeMessage ({ name, img }) {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const handleClick = () => {\r\n        dispatch( getAllPokemons() )\r\n    };\r\n\r\n    return (\r\n        <div className=\"PokecardError\">\r\n            {\r\n                name.length && \r\n                <h2 className=\"titlePokemonError\" > \r\n                {`${name.replace(name[0], name[0].toUpperCase())}`} \r\n                </h2>\r\n            }\r\n            <img \r\n            className=\"imgpokeError\" \r\n            src={img} \r\n            alt=\"img not found\" />\r\n            <div className=\"imgCardError\" >\r\n                <Link to = '/home'>\r\n                    <button \r\n                    className=\"btnpokeError\"\r\n                    onClick={ handleClick }\r\n                    > \r\n                        Back to Main Page\r\n                    </button>\r\n                </Link>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport { setDetail, getAllPokemons } from \"../actions\";\r\n\r\nexport default function Pokemon ( { id, name, img, types, attack } ) {\r\n\r\n    const dispatch = useDispatch();\r\n    \r\n    const errorSearchByName = useSelector( state => state.errorSearchByName );\r\n    const errorSearchById = useSelector( state => state.errorSearchById );\r\n    const activeFilter = useSelector( state => state.activeFilter )\r\n\r\n    const handleDetail = () => {\r\n        dispatch( setDetail() )\r\n    }\r\n    \r\n    const handleClick = () => {\r\n        dispatch( getAllPokemons() )\r\n    }\r\n\r\n    return (\r\n        <div className=\"Pokecard\">\r\n            \r\n            <div className=\"imgCard\" >\r\n            {\r\n                !errorSearchByName.length && !errorSearchById.length ?\r\n                <Link onClick={ handleDetail } to = {`/detail/${id}`}>\r\n                    <img className=\"imgpoke\" src={img} alt=\"img not found\" />\r\n                </Link> :\r\n                <Link to = '/home'>\r\n                <button \r\n                className=\"imgpokeError\"\r\n                onClick={ handleClick }\r\n                >   \r\n                    <img className=\"imgpoke\" src={img} alt=\"img not found\" />\r\n                </button>\r\n                </Link>\r\n            }\r\n            </div>\r\n            {name.length && <h2 className=\"titlePokemon\" > {`${name.replace(name[0], name[0].toUpperCase())}`} </h2>}\r\n            {/* <h3> {attack?`Attack: ${ attack }`: null} </h3> */}\r\n            <div className=\"pokeTypes\" >\r\n                {\r\n                    types.length ? types.map(( type, index ) => {\r\n                        return (\r\n                            <div\r\n                            className = {\r\n                                ( activeFilter === type.name ) ?\r\n                                \"typesNamePokemonfiltered\" :\r\n                                \"typesNamePokemon\"\r\n                            }\r\n                            key={ index }\r\n                            > { type.name.replace(type.name[0], type.name[0].toUpperCase()) } </div>\r\n                        )\r\n                    }): null\r\n                }\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React, { useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n\r\nimport { checkBulk, getAllPokemons } from \"../actions\";\r\n\r\nimport Loading from \"./Loading\";\r\nimport NavBar from \"./NavBar\";\r\nimport PokeMessage from \"./PokeMessage\";\r\nimport Pokemon from \"./Pokemon\";\r\n\r\nexport default function Home () {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const page = useSelector( state => state.page );\r\n    const loading = useSelector( state => state.loading );\r\n    const pokemons = useSelector(state => state.pokemons);\r\n    const inDetail = useSelector( state => state.inDetail )\r\n    const pokemonsPerPage = useSelector( state => state.pokemonsPerPage );\r\n    const errorSearchByName = useSelector( state => state.errorSearchByName );\r\n\r\n    const lastPokemon = page * pokemonsPerPage;\r\n    const firstPokemon = lastPokemon - pokemonsPerPage;\r\n    const pokemonsOnScreen = pokemons.slice( firstPokemon, lastPokemon );\r\n\r\n    useEffect(() => {\r\n      !inDetail &&  dispatch( getAllPokemons() );\r\n      dispatch( checkBulk() );\r\n    }, [ dispatch, inDetail ]);\r\n\r\n    return (\r\n        <div className=\"home\">\r\n            <div className=\"navbarConteiner\" >\r\n                <div className=\"NavBar\" >\r\n                    <NavBar />\r\n                </div>\r\n            </div>\r\n            {\r\n                !loading ? \r\n                <div className=\"contenedor\">\r\n                {\r\n                    ( pokemons.length && !errorSearchByName.length ) ? \r\n                    pokemonsOnScreen.map(( poke ) => {\r\n                        return(\r\n                        <div className=\"conteinerPokecard\" key={poke.id}>  \r\n                            <Pokemon \r\n                            id={poke.id}\r\n                            img={poke.img}\r\n                            name={poke.name}\r\n                            attack={poke.attack}\r\n                            types={poke.types}\r\n                            />   \r\n                        </div>\r\n                        ) \r\n                    })  : \r\n                    <PokeMessage\r\n                    name={ errorSearchByName }\r\n                    img={\"https://i1.wp.com/www.sopitas.com/wp-content/uploads/2017/07/pikachu.gif\"}\r\n                    />  \r\n                } \r\n            </div> : <Loading />\r\n            }\r\n        </div>\r\n    )\r\n};","import React from \"react\";\r\nimport { useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Link, useParams } from \"react-router-dom\";\r\n\r\nimport Loading from \"./Loading\";\r\n\r\nimport { deletePokemon, searchById } from \"../actions\";\r\nimport { useState } from \"react\";\r\nimport PokeMessage from \"./PokeMessage\";\r\n\r\n\r\n\r\nconst PokeDetail = () =>{\r\n\r\n    const { id } = useParams();\r\n    const dispatch = useDispatch();\r\n\r\n    const pokeDetail = useSelector( state => state.pokeDetail);\r\n    const loading = useSelector( state => state.loading );\r\n    const errorSearchById = useSelector( state => state.errorSearchById );\r\n    const deleted = useSelector( state => state.deleted );\r\n\r\n    const barStyleAttack = {\r\n        padding: \"2px\",\r\n        height: \"10px\",\r\n        width:\"130px\",\r\n        border: \" 1px solid #1059A8\",\r\n        background: `linear-gradient(45deg, #1059A8 ${Math.round(pokeDetail.attack/200*100)}%, transparent ${(Math.round(pokeDetail.attack/200*100))}% 100% )`\r\n    }\r\n    const barStyleDef = {\r\n        padding: \"2px\",\r\n        height: \"10px\",\r\n        width:\"130px\",\r\n        border: \"1px solid #1059A8 \",\r\n        background: `linear-gradient(45deg, #1059A8 ${((pokeDetail.defense/200)*100)}%, transparent ${((pokeDetail.defense/200)*100)}% 100%)`\r\n    }\r\n    const barStyleHp = {\r\n        padding: \"2px\",\r\n        height: \"10px\",\r\n        width:\"130px\",\r\n        border: \"1px solid #1059A8 \",\r\n        background: `linear-gradient(45deg, #1059A8 ${((pokeDetail.hp/200)*100)}%, transparent ${((pokeDetail.hp/200)*100)}% 100%)`\r\n    }\r\n    const barStyleSpeed = {\r\n        padding: \"2px\",\r\n        height: \"10px\",\r\n        width:\"130px\",\r\n        border: \"1px solid #1059A8 \",\r\n        background: `linear-gradient(45deg, #1059A8 ${((pokeDetail.velocidad/200)*100)}%, transparent ${((pokeDetail.velocidad/200)*100)}% 100%)`\r\n    }\r\n    \r\n    useEffect(() => {\r\n        dispatch( searchById( id ) )\r\n    },[ dispatch, id])\r\n    \r\n    const [ alert, setAlert ] = useState( true );\r\n\r\n    const handleAlert = () => {\r\n        alert ?\r\n        setAlert( false ) :\r\n        setAlert( true )\r\n    }\r\n\r\n    const handleDelete = () => {\r\n        setAlert( true );\r\n        dispatch( deletePokemon( id ) )\r\n    }\r\n\r\n    const handleEdit = () => {\r\n        \r\n    }\r\n\r\n    return (\r\n        <>\r\n        {\r\n            !deleted ?\r\n        <>\r\n        \r\n        {   !errorSearchById.length ?\r\n            ( pokeDetail.name && !loading ) ?\r\n            <div className=\"conteinerDetail\">\r\n                <div className=\"subConteiner1\">\r\n                    <div className=\"conteinerInternoDetail\">\r\n                    { \r\n                        <div className=\"conteinerNameDetail\">\r\n                            <div>\r\n                            {\r\n                                pokeDetail.name.length && \r\n                                <h1 className=\"nameDetail\"> \r\n                                    {\r\n                                    `${pokeDetail.name.replace(pokeDetail.name[0], pokeDetail.name[0].toUpperCase())}`\r\n                                    } \r\n                                </h1>\r\n                            }\r\n                            <h4> {`ID: ${pokeDetail.id}`} </h4>\r\n                            </div>\r\n                            \r\n                            <div className=\"conteinerPhyTypesDetail\">\r\n                                    \r\n                                <div className=\"contPhyDetail\">\r\n                                    <h1>Physical Stats</h1>\r\n                                    <div className=\"ordenadorPhy\">\r\n                                        <div className=\"dataphy\">\r\n                                        <h2> {`Height`} </h2>\r\n                                        <h2>{`${pokeDetail.height}`}</h2>\r\n                                        </div>\r\n                                        <div className=\"dataphy\">\r\n                                        <h2> {`Weight`} </h2>\r\n                                        <h2>{`${pokeDetail.weight}`}</h2>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                \r\n                                <div className=\"conteinerTypesDetail\">\r\n                                    <div>\r\n                                        <h1>Types</h1>\r\n                                    </div>\r\n                                    <div className=\"TypesDetail\">\r\n                                        {\r\n                                            pokeDetail.types.map(( type, index ) => {\r\n                                                return (\r\n                                                    <h2 \r\n                                                    className=\"h3Types\"\r\n                                                    key={ index }\r\n                                                    > {type.name.replace(type.name[0], type.name[0].toUpperCase())} </h2>\r\n                                                    )\r\n                                                })\r\n                                        }\r\n                                    </div>\r\n                                </div>\r\n                                </div>\r\n                                <div >\r\n                                    <Link to = '/home'>\r\n                                        <button className=\"BtnCreatePokemonsNav\">Main Page</button>\r\n                                    </Link>\r\n                                </div>\r\n                            \r\n                        </div> \r\n                    }\r\n                    </div>\r\n                </div>\r\n                <div className=\"subConteiner3\">\r\n                    \r\n                        <img className=\"imgDetail\" src={ pokeDetail.img } alt=\"Img not found\" />\r\n                        <div className=\"conteinerbtnsDetail\">\r\n                                <div className=\"conteinerbtnsdeletedetail\">\r\n                                    {\r\n                                        pokeDetail.fromdb ?\r\n                                        <>\r\n                                            <div className=\"conteinerBtnEditDetail\">\r\n                                                <Link to = {`/editor/${id}`} >\r\n                                                    <button\r\n                                                    onClick={ handleEdit }\r\n                                                    className=\"EditBtnDetail\"\r\n                                                    >Edit</button>\r\n                                                </Link>\r\n                                            </div>\r\n                                            <div className=\"conteinerBtnsDeleteDetail\">\r\n                                                <div className=\"btnsDeleteDetail\">\r\n                                                    { \r\n                                                        alert ?\r\n                                                        <button\r\n                                                        className=\"deletebtnDetail\"\r\n                                                        onClick={ handleAlert }\r\n                                                        >Delete\r\n                                                        </button> :\r\n                                                        <div>\r\n                                                            <h3>Are you sure? this action is permanent...</h3>\r\n                                                            <button\r\n                                                            className=\"btnAreYouSureDetailYes\"\r\n                                                            onClick={ handleDelete }\r\n                                                            >YES\r\n                                                            </button>\r\n                                                            <button\r\n                                                            className=\"btnAreYouSureDetailNo\"                                                    \r\n                                                            onClick={ handleAlert }\r\n                                                            >NO\r\n                                                            </button>\r\n                                                        </div>\r\n                                                    }\r\n                                                </div>\r\n                                            </div>\r\n                                        </> : null\r\n                                    }\r\n                                </div>\r\n                            </div>\r\n                </div>\r\n                <div className=\"subConteiner2\">\r\n                    \r\n                    <div className=\"conteinerBattleStatsDetail\">\r\n                        <div>\r\n                            <h1>Battle Stats</h1>\r\n                        </div>\r\n                        <div className=\"contStatDetail\">\r\n                            <div className=\"statDetail\">\r\n                                <h1 className=\"statImageDetail\">⚔️</h1>\r\n                                <div className=\"barStyle\" style={barStyleAttack}></div>\r\n                                <h2 className=\"statValueDetail\"> {`${pokeDetail.attack}`} </h2>\r\n                            </div>\r\n                            <div className=\"statDetail\">\r\n                                <h1 className=\"statImageDetail\">🛡️</h1>\r\n                                <div className=\"barStyle\" style={barStyleDef}></div>\r\n                                <h2 className=\"statValueDetail\"> {`${pokeDetail.defense}`} </h2>\r\n                            </div>\r\n                            <div className=\"statDetail\">\r\n                                <h1 className=\"statImageDetail\">🧡</h1>\r\n                                <div className=\"barStyle\" style={barStyleHp}></div>\r\n                                <h2 className=\"statValueDetail\"> {`${pokeDetail.hp}`} </h2>\r\n                            </div>\r\n                            <div className=\"statDetail\">\r\n                                <h1 className=\"statImageDetail\">🏃</h1>\r\n                                <div className=\"barStyle\" style={barStyleSpeed}></div>\r\n                                <h2 className=\"statValueDetail\"> {`${pokeDetail.velocidad}`} </h2>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    \r\n                </div>\r\n            </div> :\r\n            <Loading /> :\r\n            <PokeMessage\r\n            name={errorSearchById}\r\n            img={\"https://c.tenor.com/Kx9EVA2bKJ4AAAAC/pokemon-pikachu.gif\"}\r\n            />\r\n        }\r\n        </> : \r\n        <PokeMessage \r\n        name = { \"Your pokemon was deleted\"}\r\n        img={\"https://c.tenor.com/Kx9EVA2bKJ4AAAAC/pokemon-pikachu.gif\"}\r\n        />\r\n        }  \r\n        </>\r\n    )\r\n};\r\n\r\nexport default PokeDetail;","import React from \"react\";\r\n\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport { backToCreator, getAllPokemons, resetCreator } from \"../actions\";\r\n\r\nconst AfterCreator = ( props ) => {\r\n    \r\n    \r\n    const dispatch = useDispatch();\r\n    const created = useSelector( state => state.created );\r\n    const errorCreated = useSelector( state => state.errorCreated );\r\n    const pokeCache = useSelector( state => state.pokeCache )\r\n\r\n    const handleMainPage = () => {\r\n        dispatch( getAllPokemons() );\r\n    };\r\n\r\n    const handleClick = () => {\r\n        dispatch( resetCreator() );\r\n    };\r\n\r\n    const handleBack = () => {\r\n        dispatch( backToCreator() );\r\n    };\r\n\r\n    return(\r\n        <div className=\"afterCreator\">\r\n            <div className=\"conteinerAfter\">\r\n                <div className=\"messageAfter\">\r\n                {\r\n                    created ? \r\n                    <h1>Your Pokemon was created successfully!</h1> :\r\n                    <h1 className=\"messageAfterCreator\">\r\n                        {\r\n                            errorCreated.length ? \r\n                            errorCreated : \r\n                            `The name ${pokeCache.name.replace(pokeCache.name[0], pokeCache.name[0].toUpperCase() )} alredy exists, Your pokemon was not created...`\r\n                        }\r\n                    </h1>\r\n                }\r\n                </div>\r\n                <div className=\"conteinerBtnsAfter\">\r\n                    <Link className=\"LinkbtnAfter\" to = \"/home\">\r\n                        <button\r\n                        onClick={ handleMainPage }\r\n                        className=\"btnAfter\"\r\n                        >\r\n                            Main Page\r\n                        </button>\r\n                    </Link>\r\n                    {\r\n                        created ? \r\n                        <>\r\n                        <Link className=\"LinkbtnAfter\" to= {`/detail/${props.id}`}>\r\n                            <button\r\n                            className=\"btnAfter\"\r\n                            onClick={ handleClick }\r\n                            >\r\n                                See my Pokemon\r\n                            </button> \r\n                        </Link>\r\n                        \r\n                        <button\r\n                        className=\"btnAfter\"\r\n                        onClick={ handleClick }\r\n                        >\r\n                            Create Another Pokemon\r\n                        </button> \r\n                        </> :\r\n                        <button\r\n                        className=\"btnAfter\"\r\n                        onClick={ handleBack }\r\n                        >\r\n                            Back to edit\r\n                        </button> \r\n                    }\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default AfterCreator;","import React from \"react\";\r\n\r\nconst PokePre = ( props ) => {\r\n\r\n    return (\r\n        <div className=\"conteinerPrev\">\r\n            <div className=\"conteinerNamePrev\">\r\n                <h2>{ props.poke.name }</h2>\r\n            </div>\r\n            <h3>Physical Stats</h3>\r\n            <div className=\"conteinerAltPesPrev\">\r\n                <div className=\"weightPrev\" >\r\n                    <div className=\"physicalTitlePrev\">Height</div>\r\n                    <div className=\"physicalValuePrev\"> { props.poke.height } </div>\r\n                </div>\r\n                <div className=\"weightPrev\" >\r\n                    <div className=\"physicalTitlePrev\">Weight</div>\r\n                    <div className=\"physicalValuePrev\"> { props.poke.weight } </div>\r\n                </div>\r\n            </div>\r\n                <h3>{`Battle Stats & Types`}</h3>\r\n            <div className=\"conteinerStatsTypesPrev\">\r\n                <div className=\"conteinerStatsPrev\">\r\n                    <div className=\"statsPrev\">\r\n                        <div className=\"battleTitlePrev\">Attack</div>\r\n                        <div className=\"battleValuePrev\"> {props.poke.attack} </div>\r\n                    </div>\r\n                    <div className=\"statsPrev\">\r\n                        <div className=\"battleTitlePrev\">Defense</div>\r\n                        <div className=\"battleValuePrev\"> {props.poke.defense} </div>\r\n                    </div>\r\n                    <div className=\"statsPrev\">\r\n                        <div className=\"battleTitlePrev\">Hp</div>\r\n                        <div className=\"battleValuePrev\"> {props.poke.hp} </div>\r\n                    </div>\r\n                    <div className=\"statsPrev\">\r\n                        <div className=\"battleTitlePrev\">Speed</div>\r\n                        <div className=\"battleValuePrev\"> {props.poke.velocidad} </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"conteinerTypesPrev\">\r\n                    {\r\n                        props.poke.pokeTypes?.map( (el, index) => {\r\n                            return (\r\n                                <div\r\n                                key={ index } \r\n                                className= \"typesPrev\"\r\n                                > { el } </div>\r\n                            )\r\n                        })\r\n                    }\r\n                </div>\r\n            </div>\r\n            <div className=\"conteinerImgPrev\">    \r\n                <img className=\"ImgPrev\" src={ props.poke.img || \"pikachu-clipart-png-removebg-preview.png\" }  alt=\"Not found\" />\r\n            </div>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default PokePre;","import React, { useState } from \"react\";\r\nimport { useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n\r\nimport AfterCreator from \"./AfterCreator\";\r\nimport PokePre from \"./PokePre\";\r\nimport Loading from \"./Loading\"\r\n\r\nimport { createPokemon, editingAgain, getAllPokemons } from \"../actions\";\r\n\r\nexport default function PokeCreator () {\r\n\r\n    const dispatch = useDispatch();\r\n    const types = useSelector( state => state.types);\r\n    const creating = useSelector( state => state.creating );\r\n    const loading = useSelector( state => state.loading );\r\n    const back = useSelector( state => state.back );\r\n    const pokeCache = useSelector( state => state.pokeCache );\r\n    const created = useSelector( state => state.created );\r\n    const createdPokemon = useSelector( state => state.createdPokemon)\r\n\r\n    const [ pokemon, setPokemon ] = useState({\r\n        name: \"\",\r\n        img: \"\",\r\n        hp: \"\",\r\n        attack: \"\",\r\n        defense: \"\",\r\n        velocidad: \"\",\r\n        height: \"\",\r\n        weight: \"\",\r\n        pokeTypes: [],\r\n        bulked:false\r\n    })\r\n\r\n    const [ errorType, setErrorType ] = useState({\r\n        name: \"Pokemon`s name is required\",\r\n        height: \"Height must be a number between 0 - 1000\",\r\n        weight: \"Weight must be a number between 0 - 1000\",\r\n        attack: \"Attack must be a number between 0 - 200\",\r\n        defense: \"Defense must be a number between 0 - 200\",\r\n        hp: \"Hp must be a number between 0 - 200\",\r\n        velocidad: \"Speed must be a number between 0 - 200\",\r\n    })\r\n\r\n    const resetCheckbox = () => {\r\n        let i = 0;\r\n        let arr = []\r\n        while ( i < window.document.getElementsByClassName(\"selectType-creator\").length) {\r\n            arr.push(window.document.getElementsByClassName(\"selectType-creator\")[i].checked = false)\r\n            i++\r\n        }\r\n        return arr\r\n    }\r\n\r\n    useEffect(() => {\r\n        \r\n        if (created) resetCheckbox();\r\n\r\n        if( back ) {\r\n            setPokemon({\r\n                name: pokeCache.name,\r\n                img: pokeCache.img,\r\n                hp: pokeCache.hp,\r\n                attack: pokeCache.attack,\r\n                defense: pokeCache.defense,\r\n                velocidad: pokeCache.velocidad,\r\n                height: pokeCache.height,\r\n                weight: pokeCache.weight,\r\n                pokeTypes: pokeCache.pokeTypes,\r\n                bulked:false\r\n            })\r\n            setErrorType({\r\n                name: \"\",\r\n                attack: \"\",\r\n                defense: \"\",\r\n                hp: \"\",\r\n                velocidad: \"\",\r\n                height: \"\",\r\n                weight: \"\"\r\n            })\r\n        }\r\n        \r\n        dispatch( editingAgain())\r\n    }, [dispatch, created, back, pokeCache])\r\n\r\n    const inputValidator = ( event ) =>{\r\n        const regExpNum = /^-[0-9]/;\r\n        const regExpName = /[^a-zA-Z\\s\\-().]/;\r\n        // Busco cualquier cosa que no sean letras, espacios, puntos o - ( Caracteres permitidos )\r\n        switch ( event.target.name ) {\r\n\r\n            case \"pokeName\":\r\n                event.preventDefault();\r\n                !event.target.value.length ?\r\n                setErrorType({\r\n                    ...errorType,\r\n                    name: \"The pokemon must have a name\"\r\n                }) :\r\n                regExpName.test( event.target.value ) ?\r\n                setErrorType({\r\n                    ...errorType,\r\n                    name: \"The name can not contain Special Characters.\"\r\n                }) :\r\n                setErrorType({\r\n                    ...errorType,\r\n                    name: \"\"\r\n                }) \r\n                setPokemon({\r\n                    ...pokemon,\r\n                    name: event.target.value\r\n                }) \r\n                break;\r\n            case \"pokeImg\":\r\n                event.preventDefault();\r\n                setPokemon({\r\n                    ...pokemon,\r\n                    img: event.target.value\r\n                })\r\n                break;\r\n            case \"type\":\r\n                setPokemon(() => {\r\n                    if ( event.target.checked ) {\r\n                        return {\r\n                            ...pokemon,\r\n                            pokeTypes: [ ...pokemon.pokeTypes, event.target.value ]\r\n                        }\r\n                    } else {\r\n                        let filteredTypes = [];\r\n                        let i = 0;\r\n                        while ( i < pokemon.pokeTypes.length ) {\r\n                            if ( pokemon.pokeTypes[i] !== event.target.value ) {\r\n                                filteredTypes = [\r\n                                    ...filteredTypes,\r\n                                    pokemon.pokeTypes[i]\r\n                                ]\r\n                            }\r\n                            i++\r\n                        }\r\n                        return {\r\n                            ...pokemon,\r\n                            pokeTypes: filteredTypes\r\n                        }\r\n                    }\r\n                })\r\n                break;\r\n            case \"attack\":\r\n                \r\n                (\r\n                    regExpNum.test( event.target.value ) ||\r\n                    event.target.value.length === 0 || \r\n                    (event.target.value) > 200 || \r\n                    ((event.target.value) < 0) \r\n                ) ?\r\n                setErrorType({\r\n                    ...errorType,\r\n                    attack: \"Attack must be a number between 0 - 200\"\r\n                }) :\r\n                setErrorType({\r\n                    ...errorType,\r\n                    attack: \"\"\r\n                })\r\n                setPokemon({\r\n                    ...pokemon,\r\n                    attack: event.target.value\r\n                })\r\n                break;\r\n            case \"defense\":\r\n                (\r\n                    regExpNum.test( event.target.value ) ||\r\n                    event.target.value.length === 0 || \r\n                    (event.target.value) > 200 || \r\n                    ((event.target.value) < 0) \r\n                ) ?\r\n                setErrorType({\r\n                    ...errorType,\r\n                    defense: \"Defense must be a number between 0 - 200\"\r\n                }) :\r\n                setErrorType({\r\n                    ...errorType,\r\n                    defense: \"\"\r\n                })\r\n                setPokemon({\r\n                    ...pokemon,\r\n                    defense: event.target.value\r\n                })\r\n                break;\r\n            case \"hp\":\r\n                (\r\n                    regExpNum.test( event.target.value ) ||\r\n                    event.target.value.length === 0 || \r\n                    (event.target.value) > 200 || \r\n                    ((event.target.value) < 0) \r\n                ) ?\r\n                setErrorType({\r\n                    ...errorType,\r\n                    hp: \"Hp must be a number between 0 - 200\"\r\n                }) :\r\n                setErrorType({\r\n                    ...errorType,\r\n                    hp: \"\"\r\n                })\r\n                setPokemon({\r\n                    ...pokemon,\r\n                    hp: event.target.value\r\n                })\r\n                break;\r\n            case \"velocidad\":\r\n                (\r\n                    regExpNum.test( event.target.value ) ||\r\n                    event.target.value.length === 0 || \r\n                    (event.target.value) > 200 || \r\n                    ((event.target.value) < 0) \r\n                ) ?\r\n                setErrorType({\r\n                    ...errorType,\r\n                    velocidad: \" Speed must be a number between 0 - 200\"\r\n                }) :\r\n                setErrorType({\r\n                    ...errorType,\r\n                    velocidad: \"\"\r\n                })\r\n                setPokemon({\r\n                    ...pokemon,\r\n                    velocidad: event.target.value\r\n                })\r\n                break;\r\n            case \"height\":\r\n                (\r\n                    regExpNum.test( event.target.value ) ||\r\n                    event.target.value.length === 0 || \r\n                    (event.target.value) > 1000 || \r\n                    ((event.target.value) < 0) \r\n                ) ?\r\n                setErrorType({\r\n                    ...errorType,\r\n                    height: \"Height must be a number between 0 - 1000\"\r\n                }) :\r\n                setErrorType({\r\n                    ...errorType,\r\n                    height: \"\"\r\n                })\r\n                setPokemon({\r\n                    ...pokemon,\r\n                    height: event.target.value\r\n                })\r\n                break;\r\n            case \"weight\":\r\n                (\r\n                    regExpNum.test( event.target.value ) ||\r\n                    event.target.value.length === 0 || \r\n                    (event.target.value) > 1000 || \r\n                    ((event.target.value) < 0) \r\n                ) ?\r\n                setErrorType({\r\n                    ...errorType,\r\n                    weight: \"Weight must be a number between 0 - 1000\"\r\n                }) :\r\n                setErrorType({\r\n                    ...errorType,\r\n                    weight: \"\"\r\n                })\r\n                setPokemon({\r\n                    ...pokemon,\r\n                    weight: event.target.value\r\n                })\r\n                break;\r\n            default: break;\r\n        }\r\n    }\r\n    \r\n    const handleSubmit = ( event ) => {\r\n        event.preventDefault();\r\n        \r\n        dispatch( createPokemon( pokemon ) )\r\n        setPokemon({\r\n            name: \"\",\r\n            img: \"\",\r\n            hp: \"\",\r\n            attack: \"\",\r\n            defense: \"\",\r\n            velocidad: \"\",\r\n            height: \"\",\r\n            weight: \"\",\r\n            pokeTypes: [],\r\n            bulked:false\r\n        })\r\n        \r\n       \r\n    }\r\n    \r\n    const handleMainPage = () => {\r\n        dispatch( getAllPokemons() )\r\n    }\r\n    return (\r\n        <>\r\n            <form \r\n            className=\"form\"\r\n            onSubmit={ handleSubmit }\r\n            >\r\n            <div className=\"pokeCreator\">\r\n                <div className=\"firstColumn\">\r\n                    <h2>Main Information</h2>\r\n                    <div className=\"conteinerNameImgCreator\">\r\n                        <label className=\"labelNameCreator\" htmlFor=\"\">\r\n                            Name *\r\n                        </label>\r\n                        <input \r\n                        className=\"inputNameCreator\"\r\n                        type=\"text\"\r\n                        name=\"pokeName\"\r\n                        placeholder=\"Pokemon's name\"\r\n                        value={ pokemon.name }\r\n                        onChange={ inputValidator }\r\n                        />\r\n                    </div>\r\n                    <div className=\"conteinerNameImgCreator\">\r\n                        <label className=\"labelNameCreator\" htmlFor=\"\">\r\n                            {`Image (url)`}\r\n                        </label>\r\n                        <input \r\n                        className=\"inputNameCreator\"\r\n                        type=\"url\" \r\n                        name=\"pokeImg\"\r\n                        id=\"url\"\r\n                        placeholder=\"https://example.com\"\r\n                        value={ pokemon.img }\r\n                        pattern=\"https://.*\" size=\"30\"\r\n                        required \r\n                        onChange={ inputValidator }\r\n                        />\r\n                        {/* https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/other/home/600.png */}\r\n                    </div>\r\n                    <div className=\"conteinerPhyStatsCreator\">\r\n                        <h2 className=\"titilePhyCreator\">Physical stats</h2>\r\n                        <div className=\"conteinerBattleStatsCreator\">\r\n                            <div className=\"battleStatCreator\">\r\n                                <label className=\"labelPhyCreator\" htmlFor=\"\">Height</label>\r\n                                <input \r\n                                className=\"inputPhyCreator\"\r\n                                type=\"number\"\r\n                                name=\"height\"\r\n                                /* step={5} */\r\n                                min=\"0\" \r\n                                value={ pokemon.height }\r\n                                \r\n                                /* defaultValue={pokeCache.height} */\r\n                                /* defaultValue={\"\"} */\r\n                                onChange = { inputValidator }\r\n                                />\r\n                            </div>\r\n                            <div className=\"battleStatCreator\">\r\n                                <label className=\"labelPhyCreator\" htmlFor=\"\">Weight</label>\r\n                                <input \r\n                                className=\"inputPhyCreator\"\r\n                                type=\"number\"\r\n                                name=\"weight\"\r\n                                /* step={5} */\r\n                                min=\"0\" \r\n                                /* defaultValue={\"\"} */\r\n                                /* defaultValue={pokeCache.weight} */\r\n                                value={ pokemon.weight }\r\n                                onChange = { inputValidator }\r\n                                />\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"conteinerBattleStats-titleCreator\">\r\n                        <h2 className=\"titleBattleStatsCreator\">Battle Stats</h2>\r\n                        <div className=\"conteinerBattleStatsCreator\">\r\n                            <div className=\"battleStatCreator\">\r\n                                <label className=\"labelBattleCreator\" htmlFor=\"\">Attack</label>\r\n                                <input \r\n                                className=\"inputBattleStatsCreator\"\r\n                                type=\"number\"\r\n                                name=\"attack\"\r\n                                /* defaultValue={\"\"} */\r\n                                /* defaultValue={pokeCache.attack} */\r\n                                /* step={5} */\r\n                                min=\"0\" \r\n                                value={ pokemon.attack }\r\n                                onChange = { inputValidator }\r\n                                />\r\n                            </div>\r\n                            <div className=\"battleStatCreator\">\r\n                                <label className=\"labelBattleCreator\" htmlFor=\"\">Defense</label>\r\n                                <input\r\n                                className=\"inputBattleStatsCreator\" \r\n                                type=\"number\"\r\n                                name=\"defense\"\r\n                                /* defaultValue={\"\"} */\r\n                                /* defaultValue={pokeCache.defense} */\r\n                                /* step={5} */\r\n                                min=\"0\" \r\n                                value={ pokemon.defense }\r\n                                onChange = { inputValidator }\r\n                                />\r\n                            </div>\r\n                            <div className=\"battleStatCreator\">\r\n                                <label className=\"labelBattleCreator\" htmlFor=\"\">Hp</label>\r\n                                <input \r\n                                className=\"inputBattleStatsCreator\"\r\n                                type=\"number\"\r\n                                name=\"hp\"\r\n                                /* defaultValue={\"\"} */\r\n                                /* defaultValue={pokeCache.hp} */\r\n                                /* step={5} */\r\n                                min=\"0\" \r\n                                value={ pokemon.hp }\r\n                                onChange = { inputValidator }\r\n                                />\r\n                            </div>\r\n                            <div className=\"battleStatCreator\">\r\n                                <label className=\"labelBattleCreator\" htmlFor=\"\">Speed</label>\r\n                                <input \r\n                                className=\"inputBattleStatsCreator\"\r\n                                type=\"number\"\r\n                                name=\"velocidad\"\r\n                                /* defaultValue={\"\"} */\r\n                                /* defaultValue={pokeCache.velocidad} */\r\n                                /* step={5} */\r\n                                min=\"0\" \r\n                                value={ pokemon.velocidad }\r\n                                onChange = { inputValidator }\r\n                                />\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"conteinerProblemsCreator\">\r\n                        <h2 className=\"titleProblemsCreator\">Problems List</h2>\r\n                        <ul className=\"problemsCreator\">\r\n                            {\r\n                                Object.values( errorType ).map(( errorMessage, index ) => {\r\n                                    return (\r\n                                        <li className=\"itemError\" key={ index }> {errorMessage }</li>\r\n                                    )\r\n                                })\r\n                            }\r\n                        </ul>\r\n                    </div>\r\n                    <div className=\"probelmslistmessageContainer\">\r\n                            {\r\n                                !errorType.name &&\r\n                                !errorType.attack &&\r\n                                !errorType.defense &&\r\n                                !errorType.hp &&\r\n                                !errorType.velocidad &&\r\n                                !errorType.height &&\r\n                                !errorType.weight &&\r\n                                pokemon.name ?    \r\n                                null :\r\n                                <p className=\"probelmslistmessage\">* Problems List must be empty to activate the create button</p>\r\n                            }\r\n                    </div>\r\n                    <div className=\"conteinerBtnsCreator\">\r\n                        <div className=\"conteinerBtnMainCreator\">\r\n                            <Link to = '/home'>\r\n                                <button \r\n                                className=\"btnMainCreator\"\r\n                                onClick={ handleMainPage }\r\n                                >Main Page</button>\r\n                            </Link>\r\n                        </div>                      \r\n                        <div className=\"conteinerSubmitCreator\">\r\n                        {   \r\n                            !errorType.name &&\r\n                            !errorType.attack &&\r\n                            !errorType.defense &&\r\n                            !errorType.hp &&\r\n                            !errorType.velocidad &&\r\n                            !errorType.height &&\r\n                            !errorType.weight &&\r\n                            pokemon.name ?\r\n                            <input className=\"submitCreator\" type=\"submit\" value=\"Create!\"/> : \r\n                            <input className=\"submitCreator\" type=\"submit\" value=\"Create!\" disabled/>\r\n                        }\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                {\r\n                    !loading ?\r\n                    <>\r\n                        {\r\n                            creating ?\r\n                            <div className=\"thirdColumn\" >\r\n                                <h2>Preview</h2>\r\n                                <PokePre \r\n                                poke = { pokemon }\r\n                                />\r\n                            </div> :\r\n                            <div className=\"thirdColumn\">\r\n                                <div className=\"fantasma\">\r\n\r\n                            <AfterCreator id = { createdPokemon.id } />\r\n                                </div>\r\n                            </div>\r\n                        }\r\n                    </> :\r\n                    <div className=\"thirdColumn\">\r\n                        <Loading />\r\n                    </div>\r\n                }\r\n                <div className=\"secondColumn\">\r\n                        <h2>{`Types ( Optional )`}</h2>\r\n                    <div className=\"typesConteiner\">\r\n                        {\r\n                            types.map(( el, index ) => {\r\n                                return(\r\n                                    <div\r\n                                    key={ index } \r\n                                    className=\"divCheckboxType\"\r\n                                    >\r\n                                        <input\r\n                                        className=\"selectType-creator\" \r\n                                        type=\"checkbox\"\r\n                                        id={ el.name }\r\n                                        name=\"type\"\r\n                                        defaultChecked = {\r\n                                           \r\n                                           pokeCache.pokeTypes?.some( ele => ele === el.name ) \r\n                                           \r\n                                        }\r\n                                        \r\n                                        value={ el.name }\r\n                                        onChange={ inputValidator } \r\n                                        />\r\n                                        <label \r\n                                        htmlFor={ el.name }\r\n                                        className=\"labelTypes\"\r\n                                        >\r\n                                        { el.name }    \r\n                                        </label>\r\n                                    </div>\r\n                                )\r\n                            })\r\n                        }\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            </form> \r\n        </>\r\n    )\r\n}","import React, { useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n\r\nimport { getTypes } from \"../actions\";\r\nimport Loading from \"./Loading\";\r\nimport PokeCreator from \"./PokeCreator\";\r\n\r\nexport default function Form () {\r\n    const dispatch = useDispatch();\r\n    const types = useSelector( state => state.types )\r\n    const loading = useSelector( state => state.loading )\r\n    \r\n    useEffect(() => {\r\n        if ( !types.length ) {\r\n            dispatch( getTypes() )\r\n        }\r\n    }, [ dispatch, types ])\r\n    return (\r\n        <div >\r\n        {\r\n            loading ? <Loading /> : <PokeCreator /> \r\n        }\r\n        </div>\r\n    )\r\n}","import React from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport { getAllPokemons, resetUpdating } from \"../actions\";\r\n\r\nexport default function AfterEditor ( props ) {\r\n    const dispatch = useDispatch();\r\n\r\n    const updated = useSelector( state => state.updated );\r\n    const messageUpdate = useSelector( state => state.messageUpdate )\r\n    \r\n    const handleMainPage = () => {\r\n        dispatch( getAllPokemons() );\r\n        dispatch( resetUpdating() );\r\n    };\r\n\r\n    const handleClick = () => {\r\n        dispatch( resetUpdating() );\r\n    };\r\n\r\n    const handleBack = () => {\r\n        dispatch( resetUpdating() );\r\n    };\r\n\r\n    return(\r\n        <div className=\"afterCreator\">\r\n            <div className=\"conteinerAfter\">\r\n                <div className=\"messageAfter\">\r\n                    <h1> {messageUpdate} </h1>\r\n                </div>\r\n                <div className=\"conteinerBtnsAfter\">\r\n                    <Link className=\"LinkbtnAfter\" to = \"/home\">\r\n                        <button\r\n                        onClick={ handleMainPage }\r\n                        className=\"btnAfter\"\r\n                        >\r\n                            Main Page\r\n                        </button>\r\n                    </Link>\r\n                    {\r\n                        updated ? \r\n                        <>\r\n                            <Link className=\"LinkbtnAfter\" to = {`/detail/${ props.id }`} >\r\n                                <button\r\n                                className=\"btnAfter\"\r\n                                onClick={ handleClick }\r\n                                >\r\n                                    See My Pokemon\r\n                                </button> \r\n                            </Link>\r\n                            <button\r\n                            className=\"btnAfter\"\r\n                            onClick={ handleClick }\r\n                            >\r\n                                Back to Edit\r\n                            </button> \r\n                        </> :\r\n                        <button\r\n                        className=\"btnAfter\"\r\n                        onClick={ handleBack }\r\n                        >\r\n                            Back to Edit\r\n                        </button> \r\n                    }\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport { getTypes, updatePokemon, searchById, getAllPokemons } from \"../actions\";\r\n\r\nimport AfterEditor from \"./AfterEditor\";\r\nimport Loading from \"./Loading\";\r\nimport PokePre from \"./PokePre\";\r\n\r\nclass PokeEditor extends Component {\r\n    \r\n    constructor ( props ) {\r\n        super ( props );\r\n        this.state = {\r\n            pokemon: {\r\n                id: this.props.pokeDetail.id,\r\n                name: this.props.pokeDetail.name,\r\n                img:  this.props.pokeDetail.img,\r\n                hp:  this.props.pokeDetail.hp,\r\n                attack:  this.props.pokeDetail.attack,\r\n                defense:  this.props.pokeDetail.defense,\r\n                velocidad:  this.props.pokeDetail.velocidad,\r\n                height:  this.props.pokeDetail.height,\r\n                weight:  this.props.pokeDetail.weight,\r\n                pokeTypes: this.props.pokeDetail.types.map(el => el.name),\r\n                bulked:false\r\n            },\r\n            errorType: {\r\n                name: \"\",\r\n                weight: \"\",\r\n                height: \"\",\r\n                attack: \"\",\r\n                defense: \"\",\r\n                hp: \"\",\r\n                velocidad: \"\",\r\n            }\r\n        };\r\n    };\r\n    \r\n    inputValidator = ( event ) => {\r\n        const regExpNum = /^-[0-9]/;\r\n        const regExpName = /[^a-zA-Z\\s\\-().]/;\r\n        switch ( event.target.name ) {\r\n            case \"pokeName\":\r\n                \r\n                if ( !event.target.value.length ) {\r\n                    return this.setState({\r\n                        \r\n                        errorType: {\r\n                            ...this.state.errorType,\r\n                            name: \"The pokemon must have a name\"\r\n                        }\r\n                    })\r\n                } else if ( regExpName.test( event.target.value) ) {\r\n                    return this.setState({\r\n                        errorType: {\r\n                            ...this.state.errorType,\r\n                            name: \"The pokemon's name can not contain special characters \"\r\n                        }\r\n                    })\r\n                } else {\r\n                    return this.setState({\r\n                        pokemon: {\r\n                            ...this.state.pokemon,\r\n                            name: event.target.value\r\n                        },\r\n                        errorType: {\r\n                            ...this.state.errorType,\r\n                            name: \"\"\r\n                        }\r\n                    })\r\n                }\r\n            case \"pokeImg\":\r\n                return this.setState({\r\n                    pokemon: {\r\n                        ...this.state.pokemon,\r\n                        img: event.target.value\r\n                    }\r\n                })\r\n            case \"height\": \r\n                if( !event.target.value.length || \r\n                    regExpNum.test( event.target.value ) || \r\n                    (event.target.value > 1000) || \r\n                    (event.target.value < 0) ) {\r\n                    return this.setState({\r\n                        pokemon: {\r\n                            ...this.state.pokemon,\r\n                            height: \"\"\r\n                        },\r\n                        errorType: {\r\n                            ...this.state.errorType,\r\n                            height: \"Height must be a number between 0 - 1000\"\r\n                        }\r\n                    })\r\n                } else {\r\n                    return this.setState({   \r\n                        pokemon: {\r\n                            ...this.state.pokemon,\r\n                            height: event.target.value\r\n                        },\r\n                        errorType: {\r\n                            ...this.state.errorType,\r\n                            height: \"\"\r\n                        }\r\n                    })\r\n                }\r\n            case \"weight\": \r\n            if( !event.target.value.length || \r\n                regExpNum.test( event.target.value ) || \r\n                (event.target.value > 1000) || \r\n                (event.target.value < 0) ) {\r\n                return this.setState({\r\n                    pokemon: {\r\n                        ...this.state.pokemon,\r\n                        weight: \"\"\r\n                    },\r\n                    errorType: {\r\n                        ...this.state.errorType,\r\n                        weight: \"Weight must be a number between 0 - 1000\"\r\n                    }\r\n                })\r\n            } else {\r\n                return this.setState({   \r\n                    pokemon: {\r\n                        ...this.state.pokemon,\r\n                        weight: event.target.value\r\n                    },\r\n                    errorType: {\r\n                        ...this.state.errorType,\r\n                        weight: \"\"\r\n                    }\r\n                })\r\n                }\r\n            case \"attack\":\r\n                \r\n                if( !event.target.value.length || \r\n                    regExpNum.test( event.target.value ) || \r\n                    (event.target.value > 200) || \r\n                    (event.target.value < 0) ) {\r\n                    return this.setState({\r\n                        pokemon: {\r\n                            ...this.state.pokemon,\r\n                            attack: \"\"\r\n                        },\r\n                        errorType: {\r\n                            ...this.state.errorType,\r\n                            attack: \"Attack must be a number between 0 - 200\"\r\n                        }\r\n                    })\r\n                } else {\r\n                    return this.setState({   \r\n                        pokemon: {\r\n                            ...this.state.pokemon,\r\n                            attack: event.target.value\r\n                        },\r\n                        errorType: {\r\n                            ...this.state.errorType,\r\n                            attack: \"\"\r\n                        }\r\n                    })\r\n                }\r\n            case \"defense\":\r\n                if( !event.target.value.length || \r\n                    regExpNum.test( event.target.value ) || \r\n                    (event.target.value > 200) || \r\n                    (event.target.value < 0) ) {\r\n                    return this.setState({\r\n                        pokemon: {\r\n                            ...this.state.pokemon,\r\n                            defense: \"\"\r\n                        },\r\n                        errorType: {\r\n                            ...this.state.errorType,\r\n                            defense: \"Defense must be a number between 0 - 200\"\r\n                        }\r\n                    })\r\n                } else {\r\n                    return this.setState({   \r\n                        pokemon: {\r\n                            ...this.state.pokemon,\r\n                            defense: event.target.value\r\n                        },\r\n                        errorType: {\r\n                            ...this.state.errorType,\r\n                            defense: \"\"\r\n                        }\r\n                    })\r\n                }\r\n            case \"hp\":\r\n                if( !event.target.value.length || \r\n                    regExpNum.test( event.target.value ) || \r\n                    (event.target.value > 200) || \r\n                    (event.target.value < 0) ) {\r\n                    return this.setState({\r\n                        pokemon: {\r\n                            ...this.state.pokemon,\r\n                            hp: \"\"\r\n                        },\r\n                        errorType: {\r\n                            ...this.state.errorType,\r\n                            hp: \"Hp must be a number between 0 - 200\"\r\n                        }\r\n                    })\r\n                } else {\r\n                    return this.setState({   \r\n                        pokemon: {\r\n                            ...this.state.pokemon,\r\n                            hp: event.target.value\r\n                        },\r\n                        errorType: {\r\n                            ...this.state.errorType,\r\n                            hp: \"\"\r\n                        }\r\n                    })\r\n                }\r\n            case \"velocidad\":\r\n                if( !event.target.value.length || \r\n                    regExpNum.test( event.target.value ) || \r\n                    (event.target.value > 200) || \r\n                    (event.target.value < 0) ) {\r\n                    return this.setState({\r\n                        pokemon: {\r\n                            ...this.state.pokemon,\r\n                            velocidad: \"\"\r\n                        },\r\n                        errorType: {\r\n                            ...this.state.errorType,\r\n                            velocidad: \"Speed must be a number between 0 - 200\"\r\n                        }\r\n                    })\r\n                } else {\r\n                    return this.setState({   \r\n                        pokemon: {\r\n                            ...this.state.pokemon,\r\n                            velocidad: event.target.value\r\n                        },\r\n                        errorType: {\r\n                            ...this.state.errorType,\r\n                            velocidad: \"\"\r\n                        }\r\n                    })\r\n                }\r\n            case \"type\":\r\n                return this.setState(() => {\r\n                    if ( event.target.checked ) {\r\n                        return {\r\n                            ...this.state,\r\n                            pokemon: {\r\n                                ...this.state.pokemon,\r\n                                pokeTypes: [\r\n                                    ...this.state.pokemon.pokeTypes,\r\n                                     event.target.value\r\n                                    ]\r\n                            }\r\n                        }\r\n\r\n                    } else {\r\n                        let filtered = [];\r\n                        let i = 0;\r\n                        while ( i < this.state.pokemon.pokeTypes.length ) {\r\n                            if ( this.state.pokemon.pokeTypes[i] !== event.target.value )\r\n                            filtered = [\r\n                                ...filtered,\r\n                                this.state.pokemon.pokeTypes[i]\r\n                            ]\r\n                            i++\r\n                        }\r\n                        return {\r\n                            ...this.state,\r\n                            pokemon: {\r\n                                ...this.state.pokemon,\r\n                                pokeTypes: filtered\r\n                            }\r\n                        }\r\n                    }\r\n                })\r\n                \r\n            default: break;\r\n\r\n        }\r\n\r\n    };\r\n\r\n    problems () {\r\n        return !this.state.errorType.name &&\r\n        !this.state.errorType.attack &&\r\n        !this.state.errorType.defense &&\r\n        !this.state.errorType.hp &&\r\n        !this.state.errorType.velocidad &&\r\n        !this.state.errorType.height &&\r\n        !this.state.errorType.weight &&\r\n        this.state.pokemon.name ?\r\n        true:\r\n        false\r\n    };\r\n\r\n    handleMainPage = () => {\r\n        this.props.getAllPokemons()\r\n    };\r\n\r\n    handleSubmit = ( event ) => {\r\n        event.preventDefault()\r\n        const pokeToUpdate = this.state.pokemon;\r\n        \r\n        this.props.updatePokemon( pokeToUpdate )\r\n    };\r\n\r\n    render() {\r\n        \r\n        return(\r\n            <form \r\n            onSubmit={ this.handleSubmit }\r\n            >\r\n            <div className=\"pokeCreator\">\r\n                <div className=\"firstColumn\">\r\n                    <h2>Main Information</h2>\r\n                    <div className=\"conteinerNameImgCreator\">\r\n                        <label className=\"labelNameCreator\" htmlFor=\"\">\r\n                            Name *\r\n                        </label>\r\n                        <input \r\n                        className=\"inputNameCreator\"\r\n                        type=\"text\"\r\n                        name=\"pokeName\"\r\n                        placeholder=\"Pokemon's name\"\r\n                        defaultValue={ this.props.pokeDetail.name }\r\n                        onChange={ this.inputValidator }\r\n                        />\r\n                    </div>\r\n                    <div className=\"conteinerNameImgCreator\">\r\n                        <label className=\"labelNameCreator\" htmlFor=\"\">\r\n                            {`Image (url)`}\r\n                        </label>\r\n                        <input \r\n                        className=\"inputNameCreator\"\r\n                        type=\"url\" \r\n                        name=\"pokeImg\"\r\n                        id=\"url\"\r\n                        placeholder=\"https://example.com\"\r\n                        defaultValue={ this.props.pokeDetail.img }\r\n                        pattern=\"https://.*\" size=\"30\"\r\n                        required \r\n                        onChange={ this.inputValidator }\r\n                        />\r\n                    </div>\r\n                    <div className=\"conteinerPhyStatsCreator\">\r\n                        <h2 className=\"titilePhyCreator\">Physical stats</h2>\r\n                        <div className=\"conteinerBattleStatsCreator\">\r\n                            <div className=\"battleStatCreator\">\r\n                                <label className=\"labelPhyCreator\" htmlFor=\"\">Height</label>\r\n                                <input \r\n                                className=\"inputPhyCreator\"\r\n                                type=\"number\"\r\n                                name=\"height\"\r\n                                min=\"0\" \r\n                                defaultValue={ this.props.pokeDetail.height }\r\n                                onChange = { this.inputValidator }\r\n                                />\r\n                            </div>\r\n                            <div className=\"battleStatCreator\">\r\n                                <label className=\"labelPhyCreator\" htmlFor=\"\">Weight</label>\r\n                                <input \r\n                                className=\"inputPhyCreator\"\r\n                                type=\"number\"\r\n                                name=\"weight\"\r\n                                min=\"0\" \r\n                                defaultValue={ this.props.pokeDetail.weight }\r\n                                onChange = { this.inputValidator }\r\n                                />\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"conteinerBattleStats-titleCreator\">\r\n                        <h2 className=\"titleBattleStatsCreator\">Battle Stats</h2>\r\n                        <div className=\"conteinerBattleStatsCreator\">\r\n                            <div className=\"battleStatCreator\">\r\n                                <label className=\"labelBattleCreator\" htmlFor=\"\">Attack</label>\r\n                                <input \r\n                                className=\"inputBattleStatsCreator\"\r\n                                type=\"number\"\r\n                                name=\"attack\"\r\n                                min=\"0\" \r\n                                defaultValue={ this.props.pokeDetail.attack }\r\n                                onChange = { this.inputValidator }\r\n                                />\r\n                            </div>\r\n                            <div className=\"battleStatCreator\">\r\n                                <label className=\"labelBattleCreator\" htmlFor=\"\">Defense</label>\r\n                                <input\r\n                                className=\"inputBattleStatsCreator\" \r\n                                type=\"number\"\r\n                                name=\"defense\"\r\n                                min=\"0\" \r\n                                defaultValue={ this.props.pokeDetail.defense }\r\n                                onChange = { this.inputValidator }\r\n                                />\r\n                            </div>\r\n                            <div className=\"battleStatCreator\">\r\n                                <label className=\"labelBattleCreator\" htmlFor=\"\">Hp</label>\r\n                                <input \r\n                                className=\"inputBattleStatsCreator\"\r\n                                type=\"number\"\r\n                                name=\"hp\"\r\n                                min=\"0\" \r\n                                defaultValue={ this.props.pokeDetail.hp }\r\n                                onChange = { this.inputValidator }\r\n                                />\r\n                            </div>\r\n                            <div className=\"battleStatCreator\">\r\n                                <label className=\"labelBattleCreator\" htmlFor=\"\">Speed</label>\r\n                                <input \r\n                                className=\"inputBattleStatsCreator\"\r\n                                type=\"number\"\r\n                                name=\"velocidad\"\r\n                                min=\"0\" \r\n                                defaultValue={ this.props.pokeDetail.velocidad }\r\n                                onChange = { this.inputValidator }\r\n                                />\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"conteinerProblemsCreator\">\r\n                        <h2 className=\"titleProblemsCreator\">Problems List</h2>\r\n                        <ul className=\"problemsCreator\">\r\n                            {\r\n                                Object.values( this.state.errorType ).map(( errorMessage, index ) => {\r\n                                    return (\r\n                                        <li className=\"itemError\" key={ index }> {errorMessage }</li>\r\n                                    )\r\n                                })\r\n                            }\r\n                        </ul>\r\n                    </div>\r\n                    <div className=\"probelmslistmessageContainer\">\r\n                            {\r\n                                this.problems() ?   \r\n                                null :\r\n                                <p className=\"probelmslistmessage\">* Problems List must be empty to activate the Update button</p>\r\n                            }\r\n                    </div>\r\n                    <div className=\"conteinerBtnsCreator\">\r\n                        <div className=\"conteinerBtnMainCreator\">\r\n                            <Link to = '/home'>\r\n                                <button \r\n                                className=\"btnMainCreator\"\r\n                                onClick={ this.handleMainPage }\r\n                                >\r\n                                    Main Page\r\n                                </button>\r\n                            </Link>\r\n                        </div>                      \r\n                        <div className=\"conteinerSubmitCreator\">\r\n                        {   \r\n                            this.problems() ?\r\n                            <input className=\"submitCreator\" type=\"submit\" value=\"Update!\"/> : \r\n                            <input className=\"submitCreator\" type=\"submit\" value=\"Update!\" disabled/>\r\n                        }\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                {\r\n                    !this.props.loading ?\r\n                    <>\r\n                        {\r\n                            this.props.updating ?\r\n                            <div className=\"thirdColumn\" >\r\n                                <h2>Preview</h2>\r\n                                <PokePre \r\n                                poke = { this.state.pokemon }\r\n                                />\r\n                            </div> :\r\n                            <div className=\"thirdColumn\">\r\n                                <div className=\"fantasma\">\r\n                                    < AfterEditor id = {this.props.pokeDetail.id } />\r\n                                </div>\r\n                            </div>\r\n                        }\r\n                    </> :\r\n                    <div className=\"thirdColumn\">\r\n                        <div className=\"fantasma\">\r\n                            <Loading />\r\n                        </div>\r\n                    </div>\r\n                }\r\n                <div className=\"secondColumn\">\r\n                        <h2>Types ( Optional )</h2>\r\n                    <div className=\"typesConteiner\">\r\n                        {\r\n                            this.props.types.map(( el, index ) => {\r\n                                return(\r\n                                    <div\r\n                                    key={ index } \r\n                                    className=\"divCheckboxType\"\r\n                                    >\r\n                                        <input\r\n                                        className=\"selectType-creator\" \r\n                                        type=\"checkbox\"\r\n                                        id={ el.name }\r\n                                        name=\"type\"\r\n                                        value={ el.name }\r\n                                        onChange={ this.inputValidator } \r\n                                        defaultChecked = {\r\n                                            this.props.pokeDetail.types?.some(( e ) => e.name === el.name)\r\n                                        }\r\n                                        />\r\n                                        <label \r\n                                        htmlFor={ el.name }\r\n                                        className=\"labelTypes\"\r\n                                        >\r\n                                        { el.name }    \r\n                                        </label>\r\n                                    </div>\r\n                                )\r\n                            })\r\n                        }\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            </form>\r\n        )\r\n    };  \r\n};\r\n\r\nconst mapStateToProps = ( state ) => {\r\n    return {\r\n        pokeDetail: state.pokeDetail,\r\n        updating: state.updating,\r\n        creating: state.creating,\r\n        loading: state.loading,\r\n        types: state.types\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = ( dispatch ) => {\r\n    return {\r\n        getAllPokemons: () => dispatch( getAllPokemons() ),\r\n        getTypes: () => dispatch( getTypes() ),\r\n        updatePokemon: ( pokemon ) => dispatch( updatePokemon( pokemon )),\r\n        searchById: ( id ) => dispatch( searchById( id ))\r\n    };\r\n};\r\n\r\nexport default connect( mapStateToProps, mapDispatchToProps )( PokeEditor );","import React, { useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { useParams } from \"react-router-dom\";\r\n\r\nimport { getTypes, searchById } from \"../actions\";\r\n\r\nimport Loading from \"./Loading\";\r\nimport PokeEditor from \"./PokeEditor\";\r\n\r\nconst Editor = () => {\r\n\r\n    const { id } = useParams()\r\n    const dispatch = useDispatch()\r\n    const pokeDetail = useSelector( state => state.pokeDetail );\r\n    const types = useSelector(state => state.types)\r\n    \r\n    useEffect(() => {\r\n        if ( !types.length ) {\r\n            dispatch( getTypes() ) \r\n            dispatch( searchById( id ))\r\n        }\r\n    },[ dispatch, id, types ]);\r\n\r\n    return(\r\n        <>\r\n        {\r\n            !Object.values(pokeDetail).length ? \r\n            <Loading /> :\r\n            <PokeEditor />\r\n        }\r\n        </>\r\n    )\r\n};\r\n\r\nexport default Editor;","import './App.css';\nimport React from 'react';\nimport { BrowserRouter, Route, Routes } from 'react-router-dom';\nimport LandingPage from './components/Landing';\nimport Home from './components/Home';\nimport PokeDetail from './components/PokeDetail';\nimport Form from './components/Form';\nimport Editor from './components/Editor';\n\nfunction App() {\n  return (\n    <BrowserRouter>\n      <div className=\"App\">\n        <Routes>\n          <Route exact path = '/' element = { <LandingPage /> } />\n          <Route path = '/home' element = { <Home /> } />\n          <Route path = '/detail/:id' element = { <PokeDetail /> } />\n          <Route path = '/pokecreator' element = { <Form /> } />\n          <Route path = '/editor/:id' element = { <Editor />} />\n        </Routes>  \n      </div>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { \r\n    BACK_TO_CREATOR, \r\n    BULK_CREATE, \r\n    CHECK_BULK, \r\n    CLEAN_CACHE, \r\n    DELETE_POKEMON, \r\n    EDITING_AGAIN, \r\n    ERROR_CREATED, \r\n    ERROR_SEARCH_BY_ID, \r\n    ERROR_SEARCH_BY_NAME, \r\n    EXISTENT_POKEMON, \r\n    FAIL_UPDATE, \r\n    FILTER_BY_ORIGIN, \r\n    FILTER_BY_TYPE, \r\n    GET_ALL_POKEMONS, \r\n    GET_TYPES, LOADING, \r\n    ORDER_ALPHABETICALLY,\r\n    ORDER_BY_ATTACK, \r\n    POKEMON_CREATED, \r\n    RESET_CREATED, \r\n    RESET_UPDATING, \r\n    SEARCH_BY_ID, \r\n    SEARCH_BY_NAME, \r\n    SELECT_PAGE, \r\n    SET_DETAIL,\r\n    UPDATE_POKEMON } from \"../actionTypes\";\r\n\r\nconst initialState = {\r\n    allPokemons: [],\r\n    pokemons: [],\r\n    types:[],\r\n    pokeDetail: {},\r\n    inDetail: false,\r\n    createdPokemon: {},\r\n    pokeCache:{},\r\n    back: false,\r\n    createAnother: false,\r\n    updating: true,\r\n    creating: true,\r\n    created: false,\r\n    errorCreated:\"\",\r\n    updated:false,\r\n    deleted: false,\r\n    loading: false,\r\n    needBulk: false,\r\n    activeFilter: \"\",\r\n    messageUpdate: \"\",\r\n    errorSearchByName: \"\",\r\n    errorSearchById: \"\",\r\n    page: 1,\r\n    pokemonsPerPage: 12\r\n};\r\n\r\nconst rootReducer = ( state = initialState, action ) => {\r\n    switch( action.type ) {\r\n        case POKEMON_CREATED: \r\n        return {\r\n            ...state,\r\n            creating: false,\r\n            loading:false,\r\n            \r\n            pokeCache:{},\r\n            createdPokemon: action.payload.pokemonCreated,\r\n            created: action.payload.wasCreated\r\n            }\r\n        case ERROR_CREATED:\r\n            return {\r\n                ...state,\r\n                creating:false,\r\n                created:false,\r\n                loading:false,\r\n                errorCreated: action.payload\r\n            }\r\n        case DELETE_POKEMON:\r\n            return {\r\n                ...state,\r\n                deleted: true\r\n            }\r\n        case EXISTENT_POKEMON:\r\n            return {\r\n                ...state,\r\n                creating:false,\r\n                created:false,\r\n                loading:false,\r\n            }\r\n        case CLEAN_CACHE:\r\n            return{\r\n                ...state,\r\n                pokeCache:{}\r\n            }\r\n        case BACK_TO_CREATOR:\r\n            return {\r\n                ...state,\r\n                back:true,\r\n                creating:true,\r\n                errorCreated:\"\"\r\n            }\r\n        case EDITING_AGAIN:\r\n            return {\r\n                ...state,\r\n                back:false\r\n            }\r\n        case RESET_CREATED:\r\n            return {\r\n                ...state,\r\n                activeFilter: \"\",\r\n                pokeCache:{},\r\n                created:false,\r\n                createAnother: true,\r\n                creating:true\r\n            }\r\n        case SET_DETAIL: \r\n        return {\r\n            ...state,\r\n            inDetail:true,\r\n            }\r\n        case GET_ALL_POKEMONS:\r\n            return {\r\n                ...state,\r\n                allPokemons: action.payload,\r\n                pokemons: action.payload,\r\n                loading: false,\r\n                inDetail:true,\r\n                deleted: false,\r\n                activeFilter: \"\",\r\n                errorSearchByName: \"\",\r\n                errorSearchById: \"\",\r\n                page: 1\r\n            }\r\n        case GET_TYPES:\r\n            return {\r\n                ...state,\r\n                loading:false,\r\n                types: action.payload\r\n            }    \r\n        case SEARCH_BY_NAME:\r\n            return {\r\n                ...state,\r\n                activeFilter: \"\",\r\n                errorSearchByName:\"\",\r\n                loading: false,\r\n                pokemons: action.payload,\r\n                page: 1,\r\n            }\r\n        case \"FILL_CACHE\":\r\n            return {\r\n                ...state,\r\n                pokeCache:action.payload\r\n            }\r\n        case LOADING:\r\n            return {\r\n                ...state,\r\n                \r\n                loading: true\r\n            }\r\n        case ERROR_SEARCH_BY_NAME:\r\n            return {\r\n                ...state,\r\n                errorSearchByName: action.payload,\r\n                loading: false\r\n            }\r\n        case SEARCH_BY_ID:\r\n            return {\r\n                ...state,\r\n                pokeDetail:action.payload,\r\n                loading: false\r\n            }\r\n        case ERROR_SEARCH_BY_ID:\r\n            return {\r\n                ...state,\r\n                errorSearchById: action.payload,\r\n                loading: false\r\n            }  \r\n        case FILTER_BY_TYPE:\r\n            const toFilter = state.allPokemons;\r\n            const filtered = ( arreglo ) => {\r\n                const arr = [];\r\n                for( let i = 0; i < arreglo.length; i++) {\r\n                    if ( arreglo[i].types.some( type => type.name === action.payload.toLocaleLowerCase())) {\r\n                        arr.push( arreglo[i] )\r\n                    }\r\n                }\r\n                return arr\r\n            }  \r\n            if ( action.payload === \"All\" ) { \r\n                return {\r\n                    ...state,\r\n                    activeFilter: \"\",\r\n                    errorSearchByName: \"\",\r\n                    pokemons:toFilter,\r\n                    page: 1\r\n                }\r\n            } else if ( filtered( toFilter ).length) {\r\n                return {\r\n                    ...state,\r\n                    errorSearchByName: \"\",\r\n                    activeFilter: action.payload,\r\n                    pokemons: filtered( toFilter ),\r\n                    page: 1\r\n                }\r\n            } else {\r\n                return {\r\n                    ...state,\r\n                    errorSearchByName: `There's not ${action.payload.toUpperCase()} type pokemons`\r\n                }\r\n            }\r\n        case FILTER_BY_ORIGIN:\r\n            const toFilterByOrigin = state.allPokemons;\r\n            if ( action.payload === \"db\") {\r\n\r\n                const fromDb = toFilterByOrigin.filter(( pokemon ) => {\r\n                    return pokemon.fromdb\r\n                })\r\n                if ( fromDb.length ) {\r\n                    return {\r\n                        ...state,\r\n                        page: 1,\r\n                        activeFilter: \"\",\r\n                        errorSearchByName: \"\",\r\n                        pokemons: fromDb\r\n                    }\r\n                } else {\r\n                    return {\r\n                        ...state,\r\n                        page: 1,\r\n                        activeFilter: \"\",\r\n                        errorSearchByName: \"There's no pokemons in Data Base\"\r\n                    }\r\n                }\r\n                \r\n            } else {\r\n                const fromApi = toFilterByOrigin.filter(( pokemon ) => {\r\n                    return !pokemon.fromdb\r\n                })\r\n                return {\r\n                    ...state,\r\n                    page: 1,\r\n                    activeFilter: \"\",\r\n                    errorSearchByName:\"\",\r\n                    pokemons: fromApi\r\n                }\r\n            }    \r\n        case ORDER_BY_ATTACK:\r\n            const toOrderByAttack = state.pokemons;\r\n            const attackOrder = ( array ) => {\r\n                \r\n                if( array.length <= 1 ) return array;\r\n\r\n                let pivot = array[0];\r\n                let left = [];\r\n                let right = [];\r\n\r\n                for ( let i = 1; i < array.length; i++ ) {\r\n                    if( array[i].attack < pivot.attack ) {\r\n                        left.push( array[i] );\r\n                    } else {\r\n                        right.push( array[i] );\r\n                    }\r\n                }\r\n                /* console.log(\"ordenando\") */\r\n                switch ( action.payload ) {\r\n                    case 'ASC':\r\n                        return [ ...attackOrder( left ), pivot, ...attackOrder( right ) ];\r\n                    case 'DSC':\r\n                        return [ ...attackOrder( right ), pivot, ...attackOrder( left ) ];\r\n                    default: break;\r\n                }\r\n                return array;\r\n            }\r\n            return {\r\n                ...state,\r\n                page: 1,\r\n                pokemons: attackOrder( toOrderByAttack )\r\n            }\r\n        case ORDER_ALPHABETICALLY:\r\n            const ToOrderAlphabetically = state.pokemons;\r\n            const alphabeticOrder = ( array ) => {\r\n                if ( array.length <= 1) return array;\r\n                let pivot = array[0];\r\n                let left = [];\r\n                let right = [];\r\n                for ( let i = 1; i < array.length; i++ ) {\r\n                    if ( array[i].name.toLocaleLowerCase() < pivot.name.toLocaleLowerCase() ) {\r\n                        left.push( array[i] );\r\n                    } else {\r\n                        right.push( array[i] );\r\n                    }\r\n                };\r\n                if ( action.payload === \"ASC\" ) {\r\n                    return [ ...alphabeticOrder( left ), pivot, ...alphabeticOrder( right ) ]\r\n                }\r\n                if ( action.payload === \"DSC\" ) {\r\n                    return [ ...alphabeticOrder( right ), pivot, ...alphabeticOrder( left ) ]\r\n                } else {\r\n                    return array;\r\n                }\r\n            }    \r\n            return {\r\n                ...state,\r\n                page: 1,\r\n                pokemons: alphabeticOrder( ToOrderAlphabetically )\r\n            }    \r\n        case SELECT_PAGE:\r\n            return {\r\n                ...state,\r\n                page: action.payload\r\n            }\r\n        case BULK_CREATE:\r\n            return {\r\n                ...state,\r\n                inDetail:false,\r\n                bulkDone: true\r\n            }\r\n        case CHECK_BULK:\r\n            const pokes = state.allPokemons;\r\n            const bulked = pokes.some(( poke ) => {\r\n                return poke.bulked\r\n            })\r\n            if ( !bulked ) {\r\n                return {\r\n                    ...state,\r\n                    needBulk: true,\r\n                }\r\n            } else {\r\n                return {\r\n                    ...state,\r\n                    needBulk: false\r\n                }\r\n            }    \r\n        case UPDATE_POKEMON: \r\n            return {\r\n                ...state,\r\n                loading:false,\r\n                updating:false,\r\n                updated:true,\r\n                pokeDetail:action.payload.up,\r\n                messageUpdate: action.payload.data\r\n            }\r\n        case RESET_UPDATING:\r\n            return {\r\n                ...state,\r\n                updating: true,\r\n                updated: false,\r\n                \r\n            }\r\n        case FAIL_UPDATE:\r\n            return {\r\n                ...state,\r\n                loading:false,\r\n                updating:false,\r\n                messageUpdate: action.payload.data\r\n            }\r\n        default: return state\r\n    }\r\n};\r\n\r\nexport default rootReducer;","import { createStore, applyMiddleware, compose } from \"redux\";\r\nimport rootReducer from \"../reducer\";\r\nimport thunk from \"redux-thunk\";\r\n\r\n\r\n\r\nconst store = createStore (\r\n    rootReducer,\r\n    compose(applyMiddleware(thunk), window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__())\r\n)\r\n\r\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nimport  store  from './store';\nimport { Provider } from 'react-redux';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store = { store }>\n      <App />\n    </Provider>,\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}